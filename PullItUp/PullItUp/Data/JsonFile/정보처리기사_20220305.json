[
  {
    "licenseName": "정보처리기사",
    "number": 1,
    "question": "User Interface 설계 시 오류 메시지나 경고에 관한 지침으로 가장 거리가 먼 것은?",
    "options": [
      "메시지는 이해하기 쉬워야 한다.",
      "오류로부터 회복을 위한 구체적인 설명이 제공되어야 한다.",
      "오류로 인해 발생 될 수 있는 부정적인 내용을 적극적으로 사용자들에게 알려야 한다.",
      "소리나 색의 사용을 줄이고 텍스트로만 전달하도록 한다."
    ],
    "answer": "4",
    "explanation": "1) 직관성(Intuitiveness) : 누구나 쉽게 이해하고, 쉽게 사용할 수 있어야 함.\n2) 유효성(Effectiveness) : 정확하고 완벽하게 사용자의 목표가 달성될 수 있도록 제작해야 함.\n3) 학습성(Learnablilty) : 초보와 숙련자 모두가 쉽게 배우고 사용할 수 있게 제작해야 함.\n4) 유연성(Flexibility) : 사용자의 인터랙션을 최대한 포용하고, 실수를 방지할 수 있도록 제작해야 함.",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 2,
    "question": "다음 중 애자일(Agile) 소프트웨어 개발에 대한 설명으로 틀린 것은?",
    "options": [
      "공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.",
      "동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.",
      "계약 협상보다는 고객과의 협력을 가치 있게 여긴다.",
      "계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."
    ],
    "answer": "2",
    "explanation": "애자일 방법론 특징\n1) 프로젝트 요구사항은 '기능' 중심\n2) 공정과 도구보다 '개인'과 소통을 중요시\n3) '변화'에 유연하고 신속한 대처\n4) '고객'과의 피드백을 중요시",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 3,
    "question": "소프트웨어 설계에서 요구사항 분석에 대한 설명으로 틀린 것은?",
    "options": [
      "소프트웨어가 무엇을 해야하는가를 추적하여 요구사항 명세를 작성하는 작업이다.",
      "사용자의 요구를 추출하여 목표를 정하고 어떤 방식으로 해결할 것인지 결정하는 단계이다.",
      "소프트웨어 시스템이 사용되는 동안 발견되는 오류를 정리하는 단계이다.",
      "소프트웨어 개발의 출발점이면서 실질적인 첫 번째 단계이다."
    ],
    "answer": "3",
    "explanation": "요구 사항 개발 프로세스\n도출 - 분석 - 명세 - 확인",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 4,
    "question": "객체지향 기법에서 상위 클래스의 메소드와 속성을 하위 클래스가 물려받는 것을 의미하는 것은?",
    "options": [
      "Abstraction",
      "Polymorphism",
      "Encapsulation",
      "Inheritance"
    ],
    "answer": "4",
    "explanation": "객체지향의 주요 개념(원칙)\n캡슐화(Encapsulation)\n-데이터와 데이터를 처리하는 함수를 하나로 묶은 것\n-캡슐화된 객체의 세부 내용이 은폐되어 변경이 발생해도 오류의 파급효과가 적음\n-캡슐화된 객체들은 재사용이 용이함\n-인터페이스가 단순해지고 객체간의 결합도가 낮아짐\n\n상속성(Inheritance)\n-객체지향 프로그래밍에서 이미 정의된 상위 클래스(부모 클래스)의 모든 속성과 연산을 하위 클래스가 상속(물려)받는 것\n-하위 클래스는 상위 클래스로부터 받은 속성과 연산 외에도 새로운 것을 첨가 가능\n-클래스의 재사용, 소프트웨어의 재사용을 높이는 중요한 개념\n\n+ 속성과 연산 등을 물려주는 클래스를 상위 클래스 또는 슈퍼 클래스, 물려받는 클래스를 하위 클래스 또는 서브 클래스라고 한다.\n\n다형성(Polymorphism)\n-하나의 메시지에 대해 각 객체가 갖고 있는 고유한 방법대로 응답하는 것을 의미\n-하나의 클래스나 메서드가 다양한 방식으로 동작이 가능한 것을 의미\n-오버로딩과 오버라이딩이 존재",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 5,
    "question": "설계 기법 중 하향식 설계 방법과 상향식 설계 방법에 대한 비교 설명으로 가장 옳지 않은 것은?",
    "options": [
      "하향식 설계에서는 통합 검사 시 인터페이스가 이미 정의되어 있어 통합이 간단하다.",
      "하향식 설계에서 레벨이 낮은 데이터 구조의 세부 사항은 설계초기 단계에서 필요하다.",
      "상향식 설계는 최하위 수준에서 각각의 모듈들을 설계하고 이러한 모듈이 완성되면 이들을 결합하여 검사한다.",
      "상향식 설계에서는 인터페이스가 이미 성립되어 있지 않더라도 기능 추가가 쉽다."
    ],
    "answer": "4",
    "explanation": "",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 6,
    "question": "자료흐름도(DFD)의 각 요소별 표기 형태의 연결이 옳지 않은 것은?",
    "options": [
      "Process : 원",
      "Data Flow : 화살표",
      "Data Store : 삼각형",
      "Terminator : 사각형"
    ],
    "answer": "3",
    "explanation": "자료흐름도 4가지 구성요소\n- 처리 Process : 원\n- 자료흐름 Data Flow : 화살표\n- 자료저장소 Data Store : 평행선\n- 단말 Terminal : 사각형",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 7,
    "question": "소프트웨어 개발에 이용되는 모델(Model)에 대한 설명 중 거리가 먼 것은?",
    "options": [
      "모델은 개발 대상을 추상화하고 기호나 그림 등으로 시각적으로 표현한다.",
      "모델을 통해 소프트웨어에 대한 이해도를 향상시킬 수 있다.",
      "모델을 통해 이해 당사자 간의 의사소통이 향상된다.",
      "모델을 통해 향후 개발될 시스템의 유추는 불가능하다."
    ],
    "answer": "4",
    "explanation": "소프트웨어 개발시 모델은 향후 개발될 시스템을 유추하기 위해서 하는 활동이며, 주로 시스템 개발자가 실행합니다.",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 8,
    "question": "다음의 설명에 해당하는 언어는?",
    "options": [
      "JAVA",
      "C",
      "UML",
      "Python"
    ],
    "answer": "3",
    "explanation": "Unified Modeling Language",
    "subject": "소프트웨어 설계",
    "imageName": "정보처리기사_20220305_08_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 9,
    "question": "다음 내용이 설명하는 UI설계 도구는?",
    "options": [
      "스토리보드(Storyboard)",
      "목업(Mockup)",
      "프로토타입(Prototype)",
      "유스케이스(Usecase)"
    ],
    "answer": "2",
    "explanation": "스토리보드 : 디자이너와 개발자가 최종적으로 참고하는 작업지침서\n상단이나 우측에 제목,작성자등을 입력하고 좌측에는 UI화면,우측엔 디스크립션을 기입한다.\n프로토타입 : 와이어프레임이나 스토리보드등에 인터랙션을 적용함으로써 실제 구현된 것처럼 테스트가 가능한 동적인 형태의 모형\n유스케이스 : 사용자 측면에서의 요구사항으로, 사용자가 원하는 목표를 달성하기 위해 수행할 내용을 기술한다.",
    "subject": "소프트웨어 설계",
    "imageName": "정보처리기사_20220305_09_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 10,
    "question": "애자일(Agile) 기법 중 스크럼(Scrum)과 관련된 용어에 대한 설명이 틀린 것은?",
    "options": [
      "스크럼 마스터(Scrum Master)는 스크럼 프로세스를 따르고, 팀이 스크럼을 효과적으로 활용할 수 있도록 보장하는 역할 등을 맡는다.",
      "제품 백로그(Product Backlog)는 스크럼 팀이 해결해야 하는 목록으로 소프트웨어 요구사항, 아키텍처 정의 등이 포함될 수 있다.",
      "스프린트(Sprint)는 하나의 완성된 최종 결과물을 만들기 위한 주기로 3달 이상의 장기간으로 결정된다.",
      "속도(Velocity)는 한 번의 스프린트에서 한 팀이 어느 정도의 제품 백로그를 감당할 수 있는지에 대한 추정치로 볼 수 있다."
    ],
    "answer": "3",
    "explanation": "스프린트\n- 실제 개발을 2~4주간 진행하는 과정\n- 스프린트 백로그에 작성된 Task를 대상으로 작업 시간을 측정한 후 담당 개발 자에게 할당합니다.\n- Task는 할 일, 진행 중, 완료의 상태로 구성된다.",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 11,
    "question": "UML 다이어그램 중 정적 다이어그램이 아닌 것은?",
    "options": [
      "컴포넌트 다이어그램",
      "배치 다이어그램",
      "순차 다이어그램",
      "패키지 다이어그램"
    ],
    "answer": "3",
    "explanation": "정적(구조적)다이어그램 : 클객컴배복패",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 12,
    "question": "LOC기법에 의하여 예측된 총 라인수가 36000라인, 개발에 참여할 프로그래머가 6명, 프로그래머들의 평균 생산성이 월간 300라인일 때 개발에 소요되는 기간을 계산한 결과로 가장 옳은 것은?",
    "options": [
      "5개월",
      "10개월",
      "15개월",
      "20개월"
    ],
    "answer": "4",
    "explanation": "노력(M/M)=원시 코드 라인 수(LOC)/(1인당 월 평균 생산 코드 라인 수)\n=36,000라인/300라인=120M/M\n\n개발 기간=(M/M)/참여 인원=120(M/M)/6명=20개월",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 13,
    "question": "클래스 설계원칙에 대한 바른 설명은?",
    "options": [
      "단일 책임원칙 : 하나의 클래스만 변경 가능 해야한다.",
      "개방-폐쇄의 원칙 : 클래스는 확장에 대해 열려 있어야 하며 변경에 대해 닫혀 있어야 한다.",
      "리스코프 교체의 원칙 : 여러 개의 책임을 가진 클래스는 하나의 책임을 가진 클래스로 대체되어야 한다.",
      "의존관계 역전의 원칙 : 클라이언트는 자신이 사용하는 메소드와 의존관계를 갖지 않도록 해야 한다."
    ],
    "answer": "2",
    "explanation": "단일 책임원칙 : 하나의 객체는 하나의 동작만의 책임을 가짐\n개방-폐쇄의 원칙 : 클래스는 확장에 대해 열려 있어야 하며 변경에 대해 닫혀 있어야 한다.\n리스코프 교체의 원칙 : 특정 메소드가 상위 타입을 인자로 사용할 때, 그 타입의 하위 타입도 문제 없이 작동해야 함\n의존관계 역전의 원칙 : 상위 계층이 하위 계층에 의존하는 전통적인 의존관계를 반전(역전)시킴으로써 상위 계층이 하위 계층의 구현으로부터 독립되게 할 수 있음",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 14,
    "question": "GoF(Gangs of Four) 디자인 패턴에서 생성(Creational) 패턴에 해당하는 것은?",
    "options": [
      "컴퍼지트(Composite)",
      "어댑터(Adapter)",
      "추상 팩토리(Abstract Factory)",
      "옵서버(Observer)"
    ],
    "answer": "3",
    "explanation": "생성 : 3. 추상 팩토리(Abstract Factory)\n구조 : 1. 컴퍼지트(Composite), 2. 어댑터(Adapter)\n행위 : 4. 옵서버(Observer)\n\n생성패턴\n- 추상팩토리(Abstract Factory)\n- 빌더(Builder)\n- 팩토리메서드(FactoryMethod)\n- 프로토타입(Prototype)\n- 싱글톤(Singleton)\n\n구조패턴\n- 어댑터(Adapter)\n- 브리지(Bridge)\n- 컴포지트(Composite)\n- 데코레이터(Decorator)\n- 파사드(Facade)\n- 플라이웨이트(Flyweight)\n- 프록시(Proxy)\n\n행위패턴\n- 책임 연쇄(Chain of Responsibility)\n- 커맨드(Command)\n- 인터프리터(InterPreter)\n- 이터레이터(Iterator)\n- 중재자(Mediator)\n- 메멘토(Memento)\n- 옵서버(Observer)\n- 상태(State)\n- 전략(Strategy)\n- 템플릿메서드(Template Method)\n- 방문자(Visitor)",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 15,
    "question": "아키텍처 설계과정이 올바른 순서로 나열된 것은?",
    "options": [
      "㉮ → ㉯ → ㉰ → ㉱ → ㉲",
      "㉲ → ㉮ → ㉯ → ㉱ → ㉰",
      "㉮ → ㉲ → ㉯ → ㉱ → ㉰",
      "㉮ → ㉯ → ㉰ → ㉲ → ㉱"
    ],
    "answer": "1",
    "explanation": "소프트웨어 아키텍처의 설계과정\n설계목표설정 -시스템 타입 결정 - 아키텍처 패턴 적용 - 서브시스템 구체화 - 검토",
    "subject": "소프트웨어 설계",
    "imageName": "정보처리기사_20220305_15_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 16,
    "question": "사용자 인터페이스를 설계할 경우 고려해야 할 가이드라인과 가장 거리가 먼 것은?",
    "options": [
      "심미성을 사용성보다 우선하여 설계해야 한다.",
      "효율성을 높이게 설계해야 한다.",
      "발생하는 오류를 쉽게 수정할 수 있어야 한다.",
      "사용자에게 피드백을 제공해야 한다."
    ],
    "answer": "1",
    "explanation": "사용자 친화적이게 설계되어야 하기에 사용성이 최우선으로 고려되어야 함",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 17,
    "question": "소프트웨어 설계에서 자주 발생하는 문제에 대한 일반적이고 반복적인 해결 방법을 무엇이라고 하는가?",
    "options": [
      "모듈 분해",
      "디자인 패턴",
      "연관 관계",
      "클래스 도출"
    ],
    "answer": "2",
    "explanation": "디자인패턴 : 객체 지향 프로그래밍 설계를 할 때 자주 발생하는 문제들을 피하기 위해 사용되는 패턴.",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 18,
    "question": "객체지향 분석기법의 하나로 객체 모형, 동적 모형, 기능 모형의 3개 모형을 생성하는 방법은?",
    "options": [
      "Wirfs-Block Method",
      "Rumbaugh Method",
      "Booch Method",
      "Jacobson Method"
    ],
    "answer": "2",
    "explanation": "Rumbaugh(럼바우) 방법\n모든 소프트웨어 구성 요소를 그래픽 표기법을 이용하여 모델링하는 기법으로, 객체 모델링 기법(Object Modeling Technique) 라고도 한다. 분석활동은 객체모델링 -> 동적 모델링 -> 기능 모델링 순으로 통해 이루어진다\n\nBooch(부치) 방법\n미시적(Micro) 개발 프로세스와 거시적(Macro) 개발 프로세스를 모두 사용하는 분석 방법으로, 클래스와 객체들을 분석 및 식별하고 클래스의 속성과 연산을 정의한다.\n\nJacobson 방법\nUse Case를 강조하여 사용하는 분석 방법이다.\n\nCoad와 Yourdon 방법\nE-R 다이어그램을 사용하여 객체의 행위를 모델링하며, 객체 식별, 구조 식별, 주제 정의, 속성과 인스턴스 연결 정의, 연산과 메시지 연결 정의 등의 과정으로 구성하는 기법\n\nWirfs-Brock 방법\n분석과 설계 간의 구분이 없고, 고객 명세서를 평가해서 설계 작업까지 연속적으로 수행하는 기법",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 19,
    "question": "입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 처리하는 시간을 줄여주는 프로그램이나 하드웨어를 말하는 것은?",
    "options": [
      "EAI",
      "FEP",
      "GPL",
      "Duplexing"
    ],
    "answer": "2",
    "explanation": "EAI(Enterprise Application Integration): 기업 응용 프로그램 통합으로 기업용 응용 프로그램의 구조적 통합 방안을 가리킴\nFEP(Front-End Processor): 입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 차지하는 시간을 줄여주는 프로그램이나 하드웨어\nGPL(General Public License): 자유 소프트웨어 재단(OSF)에서 만든 자유 소프트웨어 라이선스\nDuplexing: 이중화(데이터베이스의 회복 기법 중 가장 간단한 것)",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 20,
    "question": "객체 지향 개념 중 하나 이상의 유사한 객체들을 묶어 공통된 특성을 표현한 데이터 추상화를 의미하는 것은?",
    "options": [
      "Method",
      "Class",
      "Field",
      "Message"
    ],
    "answer": "2",
    "explanation": "Method(메서드) : 클래스로부터 생성된 객체를 사용하는 방법, 객체가 메시지를 받아 실행해야 할 객체의 구체적인 연산\nMessage(메시지) : 객체 간 상호 작용을 하기 위한 수단, 객체에게 어떤 행위를 하도록 지시하는 방법\nClass(클래스) : 특정 객체 내에 있는 변수와 메서드를 정의하는 일종의 틀, 객체 지향 프로그래밍에서 데이터를 추상화하는 단위\nField(필드) : SQL에서 열 또는 속성이라고 불리는 것",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 21,
    "question": "클린 코드(Clean Code)를 작성하기 위한 원칙으로 틀린 것은?",
    "options": [
      "추상화 : 하위 클래스/메소드/함수를 통해 애플리케이션의 특성을 간략하게 나타내고, 상세 내용은 상위 클래스/메소드/함수에서 구현한다.",
      "의존성 : 다른 모듈에 미치는 영향을 최소화하도록 작성한다.",
      "가독성 : 누구든지 읽기 쉽게 코드를 작성한다.",
      "중복성 : 중복을 최소화 할 수 있는 코드를 작성한다."
    ],
    "answer": "1",
    "explanation": "추상화 : 상위 클래스; 프로그램 특성만 간략하게, 하위 클래스; 세부적 내용 구현\n의존성(배제) : 다른 모듈에 미치는 영향을 최소화하여 코드 변경시 영향이 가지 않도록\n중복성(최소화) : 코드의 중복을 최소화\n가독성 : 누구든지 읽기 쉽게 작성\n단순성 : 코드를 단순하게 작성(프로그램을 최소단위로 분리해 작업을 한번에 하나씩 처리하도록)",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 22,
    "question": "단위 테스트에서 테스트의 대상이 되는 하위 모듈을 호출하고, 파라미터를 전달하는 가상의 모듈로 상향식 테스트에 필요한 것은?",
    "options": [
      "테스트 스텁(Test Stub)",
      "테스트 드라이버(Test Driver)",
      "테스트 슈트(Test Suites)",
      "테스트 케이스(Test Case)"
    ],
    "answer": "2",
    "explanation": "테스트 스텁 - 제어 모듈이 호출하는 타 모듈의 기능을 단순히 수행하는 도구로, 일시적으로 필요한 조건만을 가지고 있는 테스트용 모듈\n테스트 슈트 - 테스트 대상 컴포넌트나 모듈, 시스템에 사용되는 테스트 케이스의 집합\n테스트 케이스 - 사용자의 요구사항을 정확히 준수했는지 확인하기 위한 입력 값, 실행조건, 기대결과 등으로 만들어진 테스트 항목의 명세서",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 23,
    "question": "스택(Stack)에 대한 옳은 내용으로만 나열된 것은?",
    "options": [
      "㉠, ㉡",
      "㉡, ㉢",
      "㉣",
      "㉠, ㉡, ㉢, ㉣"
    ],
    "answer": "3",
    "explanation": "FIFO-큐 방식\n한쪽에서 삽입과 삭제가 모두 이루어 짐",
    "subject": "소프트웨어 개발",
    "imageName": "정보처리기사_20220305_23_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 24,
    "question": "소프트웨어 모듈화의 장점이 아닌 것은?",
    "options": [
      "오류의 파급 효과를 최소화한다.",
      "기능의 분리가 가능하여 인터페이스가 복잡하다.",
      "모듈의 재사용 가능으로 개발과 유지보수가 용이하다.",
      "프로그램의 효율적인 관리가 가능하다."
    ],
    "answer": "2",
    "explanation": "모듈화의 장점\n- 프로그램의 효율적인 관리\n- 이해하기 쉬운 소프트웨어\n- 소프트웨어 시험, 통합, 수정 시 용이\n- 모듈 재사용 가능\n- 오류의 파급력 최소화",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 25,
    "question": "소프트웨어 프로젝트 관리에 대한 설명으로 가장 옳은 것은?",
    "options": [
      "개발에 따른 산출물 관리",
      "소요인력은 최대화하되 정책 결정은 신속하게 처리",
      "주어진 기간은 연장하되 최소의 비용으로 시스템을 개발",
      "주어진 기간 내에 최소의 비용으로 사용자를 만족시키는 시스템을 개발"
    ],
    "answer": "4",
    "explanation": "· 프로젝트 관리는 주어진 기간 내에 최소의 비용으로 사용자를 만족시키는 시스템을 개발하기 위한 전반적인 활동\n· 프로젝트 관리는 소프트웨어 개발 계획을 세우고 분석, 설계, 구현 등의 작업을 통제하는 것으로 소프트웨어 생명 주기의 전 과정에 걸쳐 진행됨\n· 소프트웨어 프로젝트를 성공적으로 수행하기 위해서는 수행할 작업의 범위, 필요한 자원, 수행 업무, 이정표, 비용 추진 일정들을 알아야 함\n- 소요인력은 최소화 하는 것이 좋음\n※ 프로젝트 관리는 제한된 시간과 비용으로 좋은 품질의 시스템을 개발하여 고객에게 제공함",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 26,
    "question": "정형 기술 검토(FTR)의 지침으로 틀린 것은?",
    "options": [
      "의제를 제한한다.",
      "논쟁과 반박을 제한한다.",
      "문제 영역을 명확히 표현한다.",
      "참가자의 수를 제한하지 않는다."
    ],
    "answer": "4",
    "explanation": "### 정형기술검토(FTR)의 지침\n- 오류 검출에 초점을 두고 해결책을 나중으로 미룸(제품 검토의 집중성)\n- 검토를 위한 자료를 사전에 배포하여 검토하도록 한다(사전 준비성)\n- 의견을 제한하되 충분히 받아들인다(의제의 제한성)\n- 안건을 세우면 고수한다(안건 고수성)\n- 논쟁과 반박을 제한한다(논쟁 반박의 제한성)\n- 문제 영역을 공개한다(문제 공개성)\n- 참가자의 수를 제한한다(참가 인원의 제한성)\n- 발견된 오류는 문서화한다(문서성)",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 27,
    "question": "소프트웨어 재공학의 주요 활동 중 기존 소프트웨어 시스템을 새로운 기술 또는 하드웨어 환경에서 사용할 수 있도록 변환하는 작업을 의미하는 것은?",
    "options": [
      "Analysis",
      "Migration",
      "Restructuring",
      "Reverse Engineering"
    ],
    "answer": "2",
    "explanation": "Analysis: 기존 소프트웨어를 분석하여 재공학 대상을 선정하는 것\nMigration: 기존 소프트웨어를 다른 운영체제나 하드웨어 환경에서 사용할 수 있도록 변환하는 작업\nRestructuring: 기존 소프트웨어를 향상시키기 위하여 코드를 재구성하는 작업(기능과 외적 동작은 변하지 않음)\nReverse Engineering: 기존 소프트웨어를 분석하여 소스코드를 얻어내는 작업(소스코드로 소프트웨어를 만드는 작업의 역작업)",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 28,
    "question": "정보시스템 개발 단계에서 프로그래밍 언어 선택 시 고려할 사항으로 가장 거리가 먼 것은?",
    "options": [
      "개발 정보시스템의 특성",
      "사용자의 요구사항",
      "컴파일러의 가용성",
      "컴파일러의 독창성"
    ],
    "answer": "4",
    "explanation": "프로그래밍 언어의 선정 기준\n- 친밀감\n- 언어의 능력\n- 처리의 효율성\n- 프로그램 구조\n- 프로그램의 길이",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 29,
    "question": "소프트웨어 패키징에 대한 설명으로 틀린 것은?",
    "options": [
      "패키징은 개발자 중심으로 진행한다.",
      "신규 및 변경 개발소스를 식별하고, 이를 모듈화하여 상용제품으로 패키징한다.",
      "고객의 편의성을 위해 매뉴얼 및 버전관리를 지속적으로 한다.",
      "범용 환경에서 사용이 가능하도록 일반적인 배포 형태로 패키징이 진행된다."
    ],
    "answer": "1",
    "explanation": "소프트웨어 패키징은 소비자 중심으로 진행한다.",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 30,
    "question": "자료 구조의 분류 중 선형 구조가 아닌 것은?",
    "options": [
      "트리",
      "리스트",
      "스택",
      "데크"
    ],
    "answer": "1",
    "explanation": "-비선형 구조 : 트리, 그래프\n-선형 구조 : 스택, 큐, 데크, 리스트\n-파일 구조 : 순차파일, 색인파일, 직접파일",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 31,
    "question": "아주 오래되거나 참고문서 또는 개발자가 없어 유지보수 작업이 아주 어려운 프로그램을 의미하는 것은?",
    "options": [
      "Title Code",
      "Source Code",
      "Object Code",
      "Alien Code"
    ],
    "answer": "4",
    "explanation": "Alien code : 개발자가 퇴사를 했거나 현재 사용하지 않는 환경 및 언어로 작성되었거나 프로그램의 관련 문서나 주석이 없는 상태에서 시간이 흐른 뒤 유지보수가 불가능하거나 힘든 프로그램 소스 코드",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 32,
    "question": "소프트웨어를 재사용함으로써 얻을 수 있는 이점으로 가장 거리가 먼 것은?",
    "options": [
      "생산성 증가",
      "프로젝트 문서 공유",
      "소프트웨어 품질 향상",
      "새로운 개발 방법론 도입 용이"
    ],
    "answer": "4",
    "explanation": "",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 33,
    "question": "인터페이스 간의 통신을 위해 이용되는 데이터 포맷이 아닌 것은?",
    "options": [
      "AJTML",
      "JSON",
      "XML",
      "YAML"
    ],
    "answer": "1",
    "explanation": "▶JSON(Javascript Object Notation)\n속성-값 쌍 또는 “키-값 쌍”으로 이루어진 데이터 오브젝트를 전달하기 위해 인간이 읽을 수 있는 텍스트를 사용하는 개방형 표준 포맷, AJAX에서 많이 사용되고 XML을 대체하는 주요 데이터 포맷\n\n▶ XML(Extensible Markup Language)\nHTML의 단점을 보완한 인터넷 언어, SGML의 복잡한 단점을 개선한 특수한 목적을 갖는 마크업 언어\n\n▶ AJAX(Asynchronous Javascript And XML)\n자바스크립트를 사용하여 웹 서버와 클라이언트 간 비동기적으로 XML 데이터를 교환하고 조작하기 위한 웹 기술, XMLHttpRequest 객체를 이용해 전체 페이지를 새로 로드하지 않고 필요한 부분만 로드한다.\n\n▶ REST(Representational State Transfer)\n⦁  웹과 같은 분산 하이퍼미디어 환경에서 자원의 존재/상태 정보를 표준화된 HTTP 메서드로 주고받는 웹 아키텍처 (리소스, 메서드, 메시지)\n⦁  HTTP URI를 통해 자원을 명시하고, HTTP 메서드(POST, GET, PUT, DELETE)를 통해 해당 자원에 대한 생성, 조회, 갱신, 삭제 등의 명령을 적용할 수 있는 분산 하이퍼미디어 시스템을 위한 소프트웨어 아키텍처이다.",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 34,
    "question": "프로그램 설계도의 하나인 NS Chart에 대한 설명으로 가장 거리가 먼 것은?",
    "options": [
      "논리의 기술에 중점을 두고 도형을 이용한 표현 방법이다.",
      "이해하기 쉽고 코드 변환이 용이하다.",
      "화살표나 GOTO를 사용하여 이해하기 쉽다.",
      "연속, 선택, 반복 등의 제어 논리 구조를 표현한다."
    ],
    "answer": "3",
    "explanation": "NS-Chart(Nassi-Schneiderman Chart)\n- 3가지 기본구조만으로 논리를 표현(표준화 가능)\n- Flow Chart의 최대 단점인 화살표가 표시되지 않음\n- 기본구조의 입구와 출구는 각 하나씩\n- 전체적인 알고리즘을 일목요연하게 볼 수 있음",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 35,
    "question": "순서가 A, B, C, D로 정해진 입력자료를 push, push, pop, push, push, pop, pop, pop 순서로 스택연산을 수행하는 경우 출력 결과는?",
    "options": [
      "B D C A",
      "A B C D",
      "B A C D",
      "A B D C"
    ],
    "answer": "1",
    "explanation": "스택연산 : 입구 및 출구가 하나 A B C D 순으로 입력되었을때 출력순서는 D C B A 순\npush 입력 pop 출력\npush A\npush A B\npop_ A / B\npush A C / B\npush A C D / B\npop_ A C / B D\npop_ A / B D C\npop_ / B D C A",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 36,
    "question": "분할 정복(Divide and Conquer)에 기반한 알고리즘으로 피벗(pivot)을 사용하며 최악의 경우 이미지를 클릭하면 확대 가능합니다.(한번더 클릭하면 원본크기로 변경 됩니다). 회의 비교를 수행해야 하는 정렬(Sort)은?",
    "options": [
      "Selection Sort",
      "Bubble Sort",
      "Insert Sort",
      "Quick Sort"
    ],
    "answer": "4",
    "explanation": "- Selection Sort - 배열 내에서 최소값을 찾은 다음 정렬 되지 않은 맨 앞 값과 교환을 하며 정렬을 해 나아가는 방법 (정렬 시간 복잡도 모두 O(n^2))\n- Bubble Sort - 왼쪽에서 부터 두 데이터를 비교해서 앞에 있는 데이터가 뒤에 있는 데이터 보다 크면 자리를 바꾸는 정렬 알고리즘(정렬 시간 복잡도 모두 O(n^2))\n- Insert Sort - 한 개의 값을 추출한 다음 앞쪽으로 비교해서 본인의 자리를 알맞게 찾아가게끔 하는 정렬 방법. 정렬 시간 복잡도는 최상일 경우 O(n), 평균과 최악일 경우 O(n^2)\n- 병합 정렬 - 또한 분할 정복에 기반한 알고리즘으로 리스트를 1 이하인 상태까지 절반으로 자른 다음 재귀적으로 합병 정렬을 이용해서 전체적인 리스트를 합병하는 정렬 과정. O(n log n)\n※ n(n-1)/2 = O(n^2)",
    "subject": "소프트웨어 개발",
    "imageName": "정보처리기사_20220305_36_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 37,
    "question": "화이트 박스 검사 기법에 해당하는 것으로만 짝지어진 것은?",
    "options": [
      "㉠, ㉡",
      "㉠, ㉣",
      "㉡, ㉤",
      "㉢, ㉥"
    ],
    "answer": "1",
    "explanation": "",
    "subject": "소프트웨어 개발",
    "imageName": "정보처리기사_20220305_37_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 38,
    "question": "소프트웨어 품질 관련 국제 표준인 ISO/IEC 25000에 관한 설명으로 옳지 않은 것은?",
    "options": [
      "소프트웨어 품질 평가를 위한 소프트웨어 품질평가 통합모델 표준이다.",
      "System and Software Quality Requirements and Evaluation으로 줄여서 SQuaRE라고도 한다.",
      "ISO/IEC 2501n에서는 소프트웨어의 내부 측정, 외부측정, 사용품질 측정, 품질 측정 요소 등을 다룬다.",
      "기존 소프트웨어 품질 평가 모델과 소프트웨어 평가 절차 모델인 ISO/IEC 9126과 ISO/IEC 14598을 통합하였다."
    ],
    "answer": "3",
    "explanation": "ISO/IEC 25000\n- SW 품질 평가 통합 모델\n- SQuaRE로도 불림\n- ISO/IEC 9126, ISO/IEC 12119, ISO/IEC 14598의 3개 표준을 통합한 모델\n\n- 2500n : 개요 및 품질관리\n- 2501n : 품질모델\n- 2502n : 품질측정\n- 2503n : 품질요구\n- 2504n : 품질평가\n- 2505n : 확장분야",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 39,
    "question": "코드 인스펙션과 관련한 설명으로 틀린 것은?",
    "options": [
      "프로그램을 수행시켜보는 것 대신에 읽어보고 눈으로 확인하는 방법으로 볼 수 있다.",
      "코드 품질 향상 기법 중 하나이다.",
      "동적 테스트 시에만 활용하는 기법이다.",
      "결함과 함께 코딩 표준 준수 여부, 효율성 등의 다른 품질 이슈를 검사하기도 한다."
    ],
    "answer": "3",
    "explanation": "코드 인스펙션\n- 결함 뿐만 아니라 모든 것이 표준대로 되어 있는 지 확인하기 위한 검토\n- 표준이나 명세서에 서술한 내용과 비교하여 편차와 에러를 식별하기 위해 산출물을 근거로 수행하는 검사\n- 정적 테스트에 가까움",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 40,
    "question": "프로젝트에 내재된 위험 요소를 인식하고 그 영향을 분석하여 이를 관리하는 활동으로서, 프로젝트를 성공시키기 위하여 위험 요소를 사전에 예측, 대비하는 모든 기술과 활동을 포함하는 것은?",
    "options": [
      "Critical Path Method",
      "Risk Analysis",
      "Work Breakdown Structure",
      "Waterfall Model"
    ],
    "answer": "2",
    "explanation": "",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 41,
    "question": "데이터베이스 설계 단계 중 물리적 설계 시 고려 사항으로 적절하지 않은 것은?",
    "options": [
      "스키마의 평가 및 정제",
      "응답 시간",
      "저장 공간의 효율화",
      "트랜잭션 처리량"
    ],
    "answer": "1",
    "explanation": "o 어떤 인덱스를 만들 것인지에 대한 고려\no 성능 향상을 위한 개념 스키마의 변경 여부 검토\no 레코드의 크기\no 파일과 구조 저장을 위한 최소한의 공간\no 빈번한 질의와 트랜잭션들의 수행 속도를 높이기 위한 고려사항\n- 응답 시간\n- 저장 공간의 효율화\n- 트랜잭션 처리량",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 42,
    "question": "DELETE 명령에 대한 설명으로 틀린 것은?",
    "options": [
      "테이블의 행을 삭제할 때 사용한다.",
      "WHERE 조건절이 없는 DELETE 명령을 수행하면 DROP TABLE 명령을 수행했을 때와 동일한 효과를 얻을 수 있다.",
      "SQL을 사용 용도에 따라 분류할 경우 DML에 해당한다.",
      "기본 사용 형식은 “DELETE FROM 테이블 [WHERE 조건];” 이다."
    ],
    "answer": "2",
    "explanation": "DELETE문은 테이블내의 튜플들만 삭제, DROP문은 테이블 자체를 삭제",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 43,
    "question": "어떤 릴레이션 R의 모든 조인 종속성의 만족이 R의 후보 키를 통해서만 만족될 때, 이 릴레이션 R이 해당하는 정규형은?",
    "options": [
      "제5정규형",
      "제4정규형",
      "제3정규형",
      "제1정규형"
    ],
    "answer": "1",
    "explanation": "- 제1정규형 : 릴레이션에 속한 모든 속성의 도메인이 원자값으로만 구성되어 있으면 제 1 정규형에 속한다.\n- 제2정규형 : 제1 정규형에 속하고, 기본키가 아닌 모든 속성이 기본키에 완전 함수 종속되면 제2 정규형에 속한다.(부분 함수 종속 제거)\n- 제3정규형 : 제2 정규형에 속하고, 기본키가 아닌 모든 속성이 기본키에 이행적 함수 종속이 되지 않으면 제3 정규형에 속한다.\n- BCNF(보이스/코드) 정규형 : 릴레이션의 함수 종속 관계에서 모든 결정자가 후보키이면 보이스/코드 정규형에 속한다.\n- 제4정규형 : BCNF 정규형을 만족하면서 함수 종속이 아닌 다치 종속을 제거해야 만족할 수 있다.\n- 제5정규형 : 제4 정규형을 만족하면서 후보키를 통하지 않는 조인 종속을 제거해야 만족할 수 있다.",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 44,
    "question": "E-R 모델에서 다중값 속성의 표기법은?",
    "options": [
      "이미지를 클릭하면 확대 가능합니다.(한번더 클릭하면 원본크기로 변경 됩니다).",
      "이미지를 클릭하면 확대 가능합니다.(한번더 클릭하면 원본크기로 변경 됩니다).",
      "이미지를 클릭하면 확대 가능합니다.(한번더 클릭하면 원본크기로 변경 됩니다).",
      "이미지를 클릭하면 확대 가능합니다.(한번더 클릭하면 원본크기로 변경 됩니다)."
    ],
    "answer": "3",
    "explanation": "마름모 : 관계\n사각형 : 개체\n선 : 관계-속성 연결",
    "subject": "데이터베이스 구축",
    "imageName": "정보처리기사_20220305_44_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 45,
    "question": "다른 릴레이션의 기본키를 참조하는 키를 의미하는 것은?",
    "options": [
      "필드키",
      "슈퍼키",
      "외래키",
      "후보키"
    ],
    "answer": "3",
    "explanation": "",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 46,
    "question": "관계해석에서 '모든 것에 대하여'의 의미를 나타내는 논리 기호는?",
    "options": [
      "∃",
      "∈",
      "∀",
      "⊂"
    ],
    "answer": "3",
    "explanation": "All의 'A'를 뒤집어놓은 상태",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 47,
    "question": "다음 릴레이션의 Degree와 Cardinality는?",
    "options": [
      "Degree : 4, Cardinality : 3",
      "Degree : 3, Cardinality : 4",
      "Degree : 3, Cardinality : 12",
      "Degree : 12, Cardinality : 3"
    ],
    "answer": "1",
    "explanation": "카디널리티=행\n디그리(차수)=열\n'카행', '디열(차열)'로 암기",
    "subject": "데이터베이스 구축",
    "imageName": "정보처리기사_20220305_47_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 48,
    "question": "뷰(View)에 대한 설명으로 틀린 것은?",
    "options": [
      "뷰 위에 또 다른 뷰를 정의할 수 있다.",
      "DBA는 보안성 측면에서 뷰를 활용할 수 있다.",
      "사용자가 필요한 정보를 요구에 맞게 가공하여 뷰로 만들 수 있다.",
      "SQL을 사용하면 뷰에 대한 삽입, 갱신, 삭제 연산 시 제약 사항이 없다."
    ],
    "answer": "4",
    "explanation": "뷰는 삽입, 갱신, 삭제 연산 시 제약 사항이 있음",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 49,
    "question": "관계 대수식을 SQL 질의로 옳게 표현한 것은?",
    "options": [
      "SELECT 학생 FROM 이름 WHERE 학과='교육';",
      "SELECT 이름 FROM 학생 WHERE 학과='교육';",
      "SELECT 교육 FROM 학과 WHERE 이름='학생';",
      "SELECT 학과 FROM 학생 WHERE 이름='교육';"
    ],
    "answer": "2",
    "explanation": "거꾸로 풀면됨 문제에서 학생이 가장 뒤에 있음 - 맨 앞에 생각하는 from문에 삽입 from 학생 그럼 2 or 4 문제에서 학과 = 교육 이니까 2번 답",
    "subject": "데이터베이스 구축",
    "imageName": "정보처리기사_20220305_49_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 50,
    "question": "정규화 과정에서 함수 종속이 A→B 이고 B→C 일 때 A→C인 관계를 제거하는 단계는?",
    "options": [
      "1NF → 2NF",
      "2NF → 3NF",
      "3NF → BCNF",
      "BCNF → 4NF"
    ],
    "answer": "2",
    "explanation": "A→B 이고 B→C 일 때 A→C를 만족하는 관계를 다른 말로 말하면, 이행적 종속(Transive Dependency) 관계입니다.\n이행적 함수 종속을 제거한다는 뜻은, 2NF(2정규형)에서 3NF(3정규형)가 되는 과정이라고도 볼 수 있겠죠.",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 51,
    "question": "CREATE TABLE문에 포함되지 않는 기능은?",
    "options": [
      "속성 타입 변경",
      "속성의 NOT NULL 여부 지정",
      "기본키를 구성하는 속성 지정",
      "CHECK 제약조건의 정의"
    ],
    "answer": "1",
    "explanation": "PRIMARY KEY : 테이블의 기본 키를 정의 / 유일하게 테이블의 각 행을 식별\nFOREIGN KEY : 참조 대상을 테이블로 명시 / 외래 키를 정의 / 열과 참조된 테이블의 열 사이의 외래 키 관계를 적용하고 설정\nUNIQUE  : 테이블 내에서 얻은 유일한 값을 갖도록 하는 속성\nNOT NULL  : 해당 컬럼은 NULL값을 포함하지 않도록 하는 속성\nCHECK  : 개발자가 정의하는 제약조건 / 참(TRUE)이어야 하는 조건을 지정\nDEFAULT : 해당 필드의 기본값을 설정\n\n2~4번은 해당이 된다. 1번은 속성타입 변경이라는 것은 CREATE TABLE에서 사용하는 것중에는 없다",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 52,
    "question": "SQL과 관련한 설명으로 틀린 것은?",
    "options": [
      "REVOKE 키워드를 사용하여 열 이름을 다시 부여할 수 있다.",
      "데이터 정의어는 기본 테이블, 뷰 테이블, 또는 인덱스 등을 생성, 변경, 제거하는데 사용되는 명령어이다.",
      "DISTINCT를 활용하여 중복 값을 제거할 수 있다.",
      "JOIN을 통해 여러 테이블의 레코드를 조합하여 표현할 수 있다."
    ],
    "answer": "1",
    "explanation": "REVOKE는 DCL에 해당 하는 권한을 해제하는 명령어",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 53,
    "question": "다음 SQL문의 실행결과로 생성되는 튜플 수는?",
    "options": [
      "1",
      "3",
      "4",
      "5"
    ],
    "answer": "4",
    "explanation": "SQL문은 : SELECT(컬럼 명) FROM (테이블 명)\nSQL의 조건이 없으므로 모든 급여가 생성된다. 따라서 5개의 튜플이 생성됨.",
    "subject": "데이터베이스 구축",
    "imageName": "정보처리기사_20220305_53_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 54,
    "question": "다음 SQL문에서 사용된 BETWEEN 연산의 의미와 동일한 것은?",
    "options": [
      "점수 ＞= 90 AND 점수 ＜= 95",
      "점수 ＞ 90 AND 점수 ＜ 95",
      "점수 ＞ 90 AND 점수 ＜= 95",
      "점수 ＞= 90 AND 점수 ＜ 95"
    ],
    "answer": "1",
    "explanation": "SQL문의 조건은 성적 테이블에 성적(점수)가 90이상 95이하인 학과를 찾아라 이다.",
    "subject": "데이터베이스 구축",
    "imageName": "정보처리기사_20220305_54_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 55,
    "question": "트랜잭션의 상태 중 트랜잭션의 수행이 실패하여 Rollback 연산을 실행한 상태는?",
    "options": [
      "철회(Aborted)",
      "부분 완료(Partially Committed)",
      "완료(Commit)",
      "실패(Fail)"
    ],
    "answer": "1",
    "explanation": "ROLLBACK = 데이터베이스 조작 작업이 비정상적으로 종료되었을 때 원래의 상태로 복구 = 철회",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 56,
    "question": "데이터 제어어(DCL)에 대한 설명으로 옳은 것은?",
    "options": [
      "ROLLBACK : 데이터의 보안과 무결성을 정의한다.",
      "COMMIT : 데이터베이스 사용자의 사용 권한을 취소한다.",
      "GRANT : 데이터베이스 사용자의 사용 권한을 부여한다.",
      "REVOKE : 데이터베이스 조작 작업이 비정상적으로 종료되었을 때 원래 상태로 복구한다."
    ],
    "answer": "3",
    "explanation": "",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 57,
    "question": "테이블 R과 S에 대한 SQL에 대한 SQL문이 실행되었을 때, 실행결과로 옳은 것은?",
    "options": [
      "이미지를 클릭하면 확대 가능합니다.(한번더 클릭하면 원본크기로 변경 됩니다).",
      "이미지를 클릭하면 확대 가능합니다.(한번더 클릭하면 원본크기로 변경 됩니다).",
      "이미지를 클릭하면 확대 가능합니다.(한번더 클릭하면 원본크기로 변경 됩니다).",
      "이미지를 클릭하면 확대 가능합니다.(한번더 클릭하면 원본크기로 변경 됩니다)."
    ],
    "answer": "4",
    "explanation": "SQL문의 : SELECT A FROM R 은 R테이블의 A컬럼의 값을 가져오라 라는 뜻\nUNION ALL : 각 쿼리의 모든 결과를 포함한 합집합 (중복제거 안함)",
    "subject": "데이터베이스 구축",
    "imageName": "정보처리기사_20220305_57_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 58,
    "question": "분산 데이터베이스 시스템(Distributed Database System)에 대한 설명으로 틀린 것은?",
    "options": [
      "분산 데이터베이스는 논리적으로는 하나의 시스템에 속하지만 물리적으로는 여러 개의 컴퓨터 사이트에 분산되어 있다.",
      "위치 투명성, 중복 투명성, 병행 투명성, 장애 투명성을 목표로 한다.",
      "데이터베이스의 설계가 비교적 어렵고, 개발 비용과 처리 비용이 증가한다는 단점이 있다.",
      "분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, P2P 시스템, 단일 데이터베이스 등이 있다."
    ],
    "answer": "4",
    "explanation": "분산 데이터베이스 주요 구성 요소는\n전역, 분할, 할당, 지역 스키마가 있다.",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 59,
    "question": "테이블 두 개를 조인하여 뷰 V_1을 정의하고, V_1을 이용하여 뷰 V_2를 정의하였다. 다음 명령 수행 후 결과로 옳은 것은?",
    "options": [
      "V_1만 삭제된다.",
      "V_2만 삭제된다.",
      "V_1과 V_2 모두 삭제된다.",
      "V_1과 V_2 모두 삭제되지 않는다."
    ],
    "answer": "3",
    "explanation": "CASCADE\n- 데이터베이스 내의 임의의 다른 테이블과 PRIMARY KEY 또는 FOREIGN KEY로서의 관계가 여전히 존재하는 경우 PRIMARY KEY가 존재하는 테이블을 마음대로 제거 및 비활성화 할 수 없다.\n- 즉, 부모 테이블과 자식테이블 간에 참조 설정이 되어 있을때 부모 테이블의 제약 조건을 비활성화 시키면서 이를 참조하고 있는 자식 테이블의 제약 조건까지 함께 비활성화시키기 위해 사용한다.\n- 또한 부모 테이블만 삭제하고 싶을 경우, 원래는 자식테이블을 먼저 삭제하고 부모를 삭제 한 뒤 자식테이블을 다시 만들어야하는 번거로움이 따른다.\n- 하지만 CASCADE를 쓰면 일시적으로 참조관계를 끊을수 있다.",
    "subject": "데이터베이스 구축",
    "imageName": "정보처리기사_20220305_59_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 60,
    "question": "데이터베이스에서 병행제어의 목적으로 틀린 것은?",
    "options": [
      "시스템 활용도 최대화",
      "사용자에 대한 응답시간 최소화",
      "데이터베이스 공유 최소화",
      "데이터베이스 일관성 유지"
    ],
    "answer": "3",
    "explanation": "병행제어의 목적\n- 여러 사용자들의 데이터베이스 공동 사용을 최대화\n- 사용자의 응답 시간 최소화\n- 데이터베이스 시스템의 활용도 최대화\n- 데이터베이스의 일관성 유지",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 61,
    "question": "IP 주소체계와 관련한 설명으로 틀린 것은?",
    "options": [
      "IPv6의 패킷 헤더는 32 octet의 고정된 길이를 가진다.",
      "IPv6는 주소 자동설정(Auto Configuration) 기능을 통해 손쉽게 이용자의 단말을 네트워크에 접속시킬 수 있다.",
      "IPv4는 호스트 주소를 자동으로 설정하며 유니캐스트(Unicast)를 지원한다.",
      "IPv4는 클래스별로 네트워크와 호스트 주소의 길이가 다르다."
    ],
    "answer": "1",
    "explanation": "IPv4와 IPv6의 차이는 정보처리기사 뿐만이 아니라 대부분의 IT관련 시험에서 다루고 있음\n주로 다루는 차이점과 핵심 단어는 아래와 같음\n1) IPv4\nㄱ. 32비트 주소\nㄴ. 유니캐스트/멀티캐스트/브로드캐스트 사용\n2) IPv6\nㄱ. 128비트 주소\nㄴ. 기존 IPv4의 주소 부족 문제를 해결하기 개발\nㄷ. 인증성/기밀성/무결성 지원 (=보안성 강화)\nㄹ. 유니캐스트, 애니캐스트, 멀티캐스트 사용",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 62,
    "question": "다음 C언어 프로그램이 실행되었을 때, 실행 결과는?",
    "options": [
      "7, 5",
      "8, 5",
      "8, 9",
      "7, 9"
    ],
    "answer": "3",
    "explanation": "p[0]=arr[0] -> p[0]+1=arr[0][1]=2\np[1]=arr[1] -> p[1]+2=arr[1][2]=6 2+6=8\n\np=arr[0]의 주소 -> p+1=arr[1] -> *(*(p+1)+0)=arr[1][0]=4\n위와 같은 계산으로 *(*(p+1)+1=arr[1][1]=5 4+5=9",
    "subject": "프로그래밍 언어 활용",
    "imageName": "정보처리기사_20220305_62_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 63,
    "question": "OSI 7계층 중 데이터링크 계층에 해당되는 프로토콜이 아닌 것은?",
    "options": [
      "HTTP",
      "HDLC",
      "PPP",
      "LLC"
    ],
    "answer": "1",
    "explanation": "1계층 - 물리계층(Physical Layer) : Coax, Fiber, Wireless\n2계층 - 데이터 링크계층(DataLink Layer) : Ethernet, SLIP, PPP, FDDI, HDLC\n3계층 - 네트워크 계층(Network Layer) : IP, IPSec, ICMP, IGMP\n4계층 - 전송 계층(Transport Layer) : TCP, UDP, ECN, SCTP, DCCP\n5계층 - 세션 계층(Session Layer) : VARIOUS API;S, SOCKETS\n6계층 - 표현 계층(Presentation Layer) : SSL, FTP, IMAP, SSH\n7계층 - 응용 계층(Application Layer) : HTTP, FTP, IRC, SSH, DNS",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 64,
    "question": "C언어에서 두 개의 논리 값 중 하나라도 참이면 1을, 모두 거짓이면 0을 반환하는 연산자는?",
    "options": [
      "||",
      "&&",
      "**",
      "!="
    ],
    "answer": "1",
    "explanation": "1) || : OR 연산 - 둘 중 하나라도 참이면 1\n2) && : AND 연산 - 둘 다 참이어야 1\n3) ** : 거듭제곱\n4) != : 부등(피연산자가 서로 다를 시 true)",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 65,
    "question": "IPv6에 대한 특성으로 틀린 것은?",
    "options": [
      "표시방법은 8비트씩 4부분의 10진수로 표시한다.",
      "2128개의 주소를 표현할 수 있다.",
      "등급별, 서비스별로 패킷을 구분할 수 있어 품질보장이 용이하다.",
      "확장기능을 통해 보안기능을 제공한다."
    ],
    "answer": "1",
    "explanation": "IPv6 : 16비트씩 8부분의 16진수로 표시",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 66,
    "question": "JAVA의 예외(exception)와 관련한 설명으로 틀린 것은?",
    "options": [
      "문법 오류로 인해 발생한 것",
      "오동작이나 결과에 악영향을 미칠 수 있는 실행 시간 동안에 발생한 오류",
      "배열의 인덱스가 그 범위를 넘어서는 경우 발생하는 오류",
      "존재하지 않는 파일을 읽으려고 하는 경우에 발생하는 오류"
    ],
    "answer": "1",
    "explanation": "문법 오류는 컴파일 시 에러가 발생하기 때문에 프로그램의 정상적인 실행이 불가능하므로 자바에서 정의한 예외 조건에 부합하지 않는다.",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 67,
    "question": "TCP/IP 계층 구조에서 IP의 동작 과정에서의 전송 오류가 발생하는 경우에 대비해 오류 정보를 전송하는 목적으로 사용하는 프로토콜은?",
    "options": [
      "ECP(Error Checking Protocol)",
      "ARP(Address Resolution Protocol)",
      "ICMP(Internet Control Message Protocol)",
      "PPP(Point-to-Point Protocol)"
    ],
    "answer": "3",
    "explanation": "ARP : IP 네트워크 상에서 IP주소를 MAC주소로 변환하는 프로토콜",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 68,
    "question": "좋은 소프트웨어 설계를 위한 소프트웨어의 모듈간의 결합도(Coupling)와 모듈 내 요소 간 응집도(Cohesion)에 대한 설명으로 옳은 것은?",
    "options": [
      "응집도는 낮게 결합도는 높게 설계한다.",
      "응집도는 높게 결합도는 낮게 설계한다.",
      "양쪽 모두 낮게 설계한다.",
      "양쪽 모두 높게 설계한다."
    ],
    "answer": "2",
    "explanation": "좋은 소프트웨어일수록 결합도는 낮고, 응집도는 높다\n결합도 : 어떤 모듈이 다른 모듈에 의존하는 정도\n응집도 : 한 모듈 내부의 처리 요소들이 서로 관련되어 있는 정도(독립적 기능 수행 정도)\n코딩할 때로 예를 들자면 모듈을 만들었는데 이 코드 저 코드 엮어서 거미줄 코딩을 한 경우 서로에 대한 의존도가 높으므로 결합도가 높다고 할 수 있고, 하나의 모듈을 만들었는데 독립적 기능을 수행하며 타 코드와 큰 연관성이 없을 경우 응집도가 높다고 할 수 있다. (한마디로 독립적인 모듈이냐 의존적인 모듈이냐!)\n응집도 결합도는 필기/실기 엄청 자주 출제되므로 꼭 잘 모르겠으면, 구글링해서 꼭 제대로 알고 넘어가도록 합시다.",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 69,
    "question": "다음과 같은 형태로 임계 구역의 접근을 제어하는 상호배제 기법은?",
    "options": [
      "Dekker Algorithm",
      "Lamport Algorithm",
      "Peterson Algorithm",
      "Semaphore"
    ],
    "answer": "4",
    "explanation": "",
    "subject": "프로그래밍 언어 활용",
    "imageName": "정보처리기사_20220305_69_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 70,
    "question": "소프트웨어 개발에서 모듈(Module)이 되기 위한 주요 특징에 해당하지 않는 것은?",
    "options": [
      "다른 것들과 구별될 수 있는 독립적인 기능을 가진 단위(Unit)이다.",
      "독립적인 컴파일이 가능하다.",
      "유일한 이름을 가져야 한다.",
      "다른 모듈에서의 접근이 불가능해야 한다."
    ],
    "answer": "4",
    "explanation": "다른 모듈에서의 접근이 불가능한 것은 폐쇄적인 것.\n모듈은 폐쇄적이거나 접근이 불가능하게 설계할 필요는 없음.",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 71,
    "question": "빈 기억공간의 크기가 20KB, 16KB, 8KB, 40KB 일 때 기억장치 배치 전략으로 “Best Fit\"을 사용하여 17KB의 프로그램을 적재할 경우 내부단편화의 크기는 얼마인가?",
    "options": [
      "3KB",
      "23KB",
      "64KB",
      "67KB"
    ],
    "answer": "1",
    "explanation": "문제에서 Best Fit을 물을 시 내부단편화가 제일 작은 보기를 찾으면 됨\n1) 20KB - 17KB = 3KB\n2) 16KB - 17KB = 불가\n3) 8KB - 17KB = 불가\n4) 40KB - 17KB = 23KB\n따라서 1번이 정답",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 72,
    "question": "다음 C언어프로그램이 실행되었을 때, 실행 결과는?",
    "options": [
      "i = 0",
      "i = 1",
      "i = 3",
      "i = 4"
    ],
    "answer": "4",
    "explanation": "while에서 조건식 대신 1을 지정하면 무한히 반복하는 루프가 만들어집니다. i가 4가 되면 break로 while문을 빠져나오게 되면서 i는 4가 됩니다.",
    "subject": "프로그래밍 언어 활용",
    "imageName": "정보처리기사_20220305_72_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 73,
    "question": "다음 JAVA 프로그램이 실행되었을 때, 실행 결과는?",
    "options": [
      "BCDABCA",
      "BCDABCC",
      "CDDACCC",
      "CDDACCA"
    ],
    "answer": "2",
    "explanation": "rs(c)는 대충 a=c라고 생각하고 rs(char a[])=rs(char c[])\nc의 문자열 크기는 7이므로 a.length=7\n\nrs()는 i가 7미만일때까지 반복한다는 의미\n{'A', 'B', 'D', 'D', 'A', 'B', 'C'} 에서 a[0]='A', a[1]='B' 이런식으로 이해하면되는데\nrs 첫번째 if문은 a[i]의 값이'B'인 경우 그 값을 B에서 C로 바꾸라는 의미이고\nrs 두번째 else if는 i=6일때 a[6]=a[5]로 바꾸라는 의미이고\nrs 세번째 else 는 1, 2번째 if문에 충족되지 않는 나머지 경우는 다 a[i]=a[i+1]을 해주라는 의미\n\n{'A', 'B', 'D', 'D', 'A', 'B', 'C'}에서\ni=0 이면 A[0]를 A[1]로 변경해서 {'B', 'B', 'D', 'D', 'A', 'B', 'C'}\ni=1 이면 값이 B이기 때문에 C로 변경 {'B', 'C', 'D', 'D', 'A', 'B', 'C'}\ni=2 이면 A[2]를 A[3]으로 변경 {'B', 'C', 'D', 'D', 'A', 'B', 'C'} -똑같아서 그대로 방치\ni=3 이면 A[3]를 A[4]로 변경 {'B', 'C', 'D', 'A', 'A', 'B', 'C'}\ni=4 이면 A[4]를 A[5]로 변경 {'B', 'C', 'D', 'A', 'B', 'B', 'C'}\ni=5 이면 값이 B이기 때문에 C로 변경 {'B', 'C', 'D', 'A', 'B', 'C', 'C'}\ni=6 이면 A[6]를 A[5]로 변경 {'B', 'C', 'D', 'A', 'B', 'C', 'C'}\npca(c)로 와서 char a[] 그대로 출력\n정답은 {'B', 'C', 'D', 'A', 'B', 'C', 'C'} = 2번",
    "subject": "프로그래밍 언어 활용",
    "imageName": "정보처리기사_20220305_73_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 74,
    "question": "개발 환경 구성을 위한 빌드(Build) 도구에 해당하지 않는 것은?",
    "options": [
      "Ant",
      "Kerberos",
      "Maven",
      "Gradle"
    ],
    "answer": "2",
    "explanation": "Build = 작성된 Source Code를 실제 기기에서 실행 할 수 있는 소프트웨어로 변환하기 위한 과정\n1) Ant = 아파치 재단에서 개발한 자바의 공식적인 빌드 도구\n2) Kerberos = 컴퓨터 네트워크 인증 암호화 프로토콜로\n3) Maven = 아파치 재단에서 개발, Ant 대안으로 개발되었음\n4) Gradle = Ant, Maven 의 보완으로 개발된 빌드 도구(안드로이드 스튜디오 주 빌드 도구)",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 75,
    "question": "3개의 페이지 프레임을 갖는 시스템에서 페이지 참조 순서가 1, 2, 1, 0, 4, 1, 3 일 경우 FIFO 알고리즘에 의한 페이지 교체의 경우 프레임의 최종 상태는?",
    "options": [
      "1, 2, 0",
      "2, 4, 3",
      "1, 4, 2",
      "4, 1, 3"
    ],
    "answer": "4",
    "explanation": "[1]  (1)   [4]\n  [2]        [1]\n        [0]    [3]",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 76,
    "question": "다음 C언어 프로그램이 실행되었을 때, 실행 결과는?",
    "options": [
      "E",
      "V",
      "R",
      "O"
    ],
    "answer": "3",
    "explanation": "str1[1]=str2[2] => str1의 KOREA중 O가 V로 변경\nstr1= KVREA\nstr2[3]=str1[4] =>str2의 LOVE중 E가 A로 변경\nstr2=LOVA\n\np1+2= str1[2]= R",
    "subject": "프로그래밍 언어 활용",
    "imageName": "정보처리기사_20220305_76_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 77,
    "question": "다음 Python 프로그램이 실행되었을 때, 실행 결과는?",
    "options": [
      "이미지를 클릭하면 확대 가능합니다.(한번더 클릭하면 원본크기로 변경 됩니다).",
      "이미지를 클릭하면 확대 가능합니다.(한번더 클릭하면 원본크기로 변경 됩니다).",
      "이미지를 클릭하면 확대 가능합니다.(한번더 클릭하면 원본크기로 변경 됩니다).",
      "이미지를 클릭하면 확대 가능합니다.(한번더 클릭하면 원본크기로 변경 됩니다)."
    ],
    "answer": "1",
    "explanation": "list_data에 a가 아니라 'a'이기 때문에 문자 그대로 a로 출력되고\ndict_data는 90으로 출력됨",
    "subject": "프로그래밍 언어 활용",
    "imageName": "정보처리기사_20220305_77_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 78,
    "question": "C언어에서 정수 변수 a, b에 각각 1, 2가 저장되어 있을 때 다음 식의 연산 결과로 옳은 것은?",
    "options": [
      "0",
      "1",
      "3",
      "5"
    ],
    "answer": "2",
    "explanation": "연산자 우선순위 문제\na < (b+2) -> true\na<<1 = 00000001 (1) 에서 좌측시프트 00000010 (2)/ 2<=b = true\n&& - and 연산은 둘다 참일결우 1을 반환",
    "subject": "프로그래밍 언어 활용",
    "imageName": "정보처리기사_20220305_78_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 79,
    "question": "다음 Python 프로그램이 실행되었을 때, 실행 결과는?",
    "options": [
      "이미지를 클릭하면 확대 가능합니다.(한번더 클릭하면 원본크기로 변경 됩니다).",
      "이미지를 클릭하면 확대 가능합니다.(한번더 클릭하면 원본크기로 변경 됩니다).",
      "이미지를 클릭하면 확대 가능합니다.(한번더 클릭하면 원본크기로 변경 됩니다).",
      "이미지를 클릭하면 확대 가능합니다.(한번더 클릭하면 원본크기로 변경 됩니다)."
    ],
    "answer": "2",
    "explanation": "for (반복변수) in [리스트]\n결국 리스트에 있는 값 인덱스 기반으로 하나 씩 출력",
    "subject": "프로그래밍 언어 활용",
    "imageName": "정보처리기사_20220305_79_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 80,
    "question": "UNIX 시스템의 쉘(shell)의 주요 기능에 대한 설명이 아닌 것은?",
    "options": [
      "사용자 명령을 해석하고 커널로 전달하는 기능을 제공한다.",
      "반복적인 명령 프로그램을 만드는 프로그래밍 기능을 제공한다.",
      "쉘 프로그램 실행을 위해 프로세스와 메모리를 관리한다.",
      "초기화 파일을 이용해 사용자 환경을 설정하는 기능을 제공한다."
    ],
    "answer": "3",
    "explanation": "프로세스, 메모리 관리는 커널의 기능",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 81,
    "question": "소프트웨어 생명주기 모델 중 나선형 모델(Spiral Model)과 관련한 설명으로 틀린 것은?",
    "options": [
      "소프트웨어 개발 프로세스를 위험 관리(Risk Management) 측면에서 본 모델이다.",
      "위험 분석(Risk Analysis)은 반복적인 개발 진행 후 주기의 마지막 단계에서 최종적으로 한 번 수행해야 한다.",
      "시스템을 여러 부분으로 나누어 여러 번의 개발 주기를 거치면서 시스템이 완성된다.",
      "요구사항이나 아키텍처를 이해하기 어렵다거나 중심이 되는 기술에 문제가 있는 경우 적합한 모델이다."
    ],
    "answer": "2",
    "explanation": "점진적으로 개발 과정이 반복되므로 위험분석 또한 계획 수립 이후 추가적인 위험 분석이 가능함",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 82,
    "question": "정보시스템과 관련한 다음 설명에 해당하는 것은?",
    "options": [
      "고가용성 솔루션(HACMP)",
      "점대점 연결 방식(Point-to-Point Mode)",
      "스턱스넷(Stuxnet)",
      "루팅(Rooting)"
    ],
    "answer": "1",
    "explanation": "고가용성 솔루션(HACMP:High Availability Cluster Multi Processing)\n- AIX를 기반으로 한 IBM의 High Availability Solution\n- Resource의 중복 또는 공유를 통해 Application의 보호를 가능하게 해줌\n- 같은 Data를 공유하거나 동시에 access하는 node들에서 여러 개의 application을 실행하게 해줌\n- 두대 이상의 시스템을 하나의 Cluster로 묶어 Cluster내의 한 시스템에서 장애가 발생할 경우 다른 시스템이 장애가 발생한 시스템의 자원을 인수할 수 있도록 하여 서비스의 중단을 최소화 할 수 있도록 도와주는 솔루션\n\n점대점 연결 방식(Point-to-Point Mode)\n- 네트워크에 있어 물리적으로는 중개 장치를 통과하지 않고 한 지점에서 다른 지점으로 직접 가는 채널\n- 두 스테이션간을 별도의 회선을 사용하여 1 대 1로 연결.\n- 전용회선이나 공중 전화 회선을 이용.\n- 회선 구성이 간단하고 대용량 전송에 유리.\n- 별도의 회선과 포트에 따른 높은 설치비용\n\n스턱스넷(Stuxnet)\n- 2010년 6월에 발견된 웜 바이러스\n- 윈도우를 통해 감염, 지맨스산업의 SW 및 장비를 공격\n\n루팅(Rooting)\n- 모바일 기기에서 구동되는 안드로이드 운영체제상에서 최상위 권한 (루트 권한)을 얻음으로 해당 기기의 생산자 또는 판매자 측에서 걸어 놓은 제약을 해제하는 행위",
    "subject": "정보시스템 구축관리",
    "imageName": "정보처리기사_20220305_82_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 83,
    "question": "위조된 매체 접근 제어(MAC) 주소를 지속적으로 네트워크로 흘려보내, 스위치 MAC 주소 테이블의 저장 기능을 혼란시켜 더미 허브(Dummy Hub)처럼 작동하게 하는 공격은?",
    "options": [
      "Parsing",
      "LAN Tapping",
      "Switch Jamming",
      "FTP Flooding"
    ],
    "answer": "3",
    "explanation": "- Parsing\n    - 하나의 프로그램을 런타임 환경(예를 들면, 브라우저 내 자바스크립트 엔진)이 실제로 실행할 수 있는 내부 포맷으로 분석하고 변환하는 것을 의미함\n- LAN Tapping\n    - 처음 들어보는 용어이고, 찾아도 제대로된 정의가 나오지 않으나 Lan+Tapping으로 해석한다면 LAN신호를 직접 자신에게 끌어오는 방식의 공격정도로 해석 가능함\n- Switch Jamming\n    - 스위치의 기능이 방해 받아 정상 동작을 하지 못해 스위치가 더미 허브처럼 작동 하게 되는 것\n    - Switch + Jamming(방해)\n- FTP(SYN) Flooding\n    - TCP의 3 Way Handshake 취약점을 이용한 DoS 공격으로 다량의 SYN패킷을 보내 백로그큐를 가득 채우는 공격\n    - 통상적으로 위의 공격법을 TCP SYN Flooding 이라고 칭하는 경우가 많음\n    - FTP프로토콜을 사용한 서버에 다량의 SYN 패킷을 보내 마비시키는것을 FTP Flooding이라고 볼 수 있음.",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 84,
    "question": "다음 내용이 설명하는 스토리지 시스템은?",
    "options": [
      "DAS",
      "NAS",
      "BSA",
      "NFC"
    ],
    "answer": "1",
    "explanation": "직접 연결 저장장치(Direct-attached storage,DAS)\nNetwork Attached Storage. 네트워크 결합 스토리지\n근거리 무선 통신(NFC)",
    "subject": "정보시스템 구축관리",
    "imageName": "정보처리기사_20220305_84_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 85,
    "question": "취약점 관리를 위해 일반적으로 수행하는 작업이 아닌 것은?",
    "options": [
      "무결성 검사",
      "응용 프로그램의 보안 설정 및 패치(Patch) 적용",
      "중단 프로세스 및 닫힌 포트 위주로 확인",
      "불필요한 서비스 및 악성 프로그램의 확인과 제거"
    ],
    "answer": "3",
    "explanation": "중단된 프로세스와 닫힌 포트가 아니라, 활성화된 프로세스와 열린 포트를 중심으로 확인해야 취약점이 관리될 수 있음.",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 86,
    "question": "소프트웨어 생명주기 모델 중 V 모델과 관련한 설명으로 틀린 것은?",
    "options": [
      "요구 분석 및 설계단계를 거치지 않으며 항상 통합 테스트를 중심으로 V 형태를 이룬다.",
      "Perry에 의해 제안되었으며 세부적인 테스트 과정으로 구성되어 신뢰도 높은 시스템을 개발하는데 효과적이다.",
      "개발 작업과 검증 작업 사이의 관계를 명확히 드러내 놓은 폭포수 모델의 변형이라고 볼 수 있다.",
      "폭포수 모델이 산출물 중심이라면 V 모델은 작업과 결과의 검증에 초점을 둔다."
    ],
    "answer": "1",
    "explanation": "",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 87,
    "question": "블루투스(Bluetooth) 공격과 해당 공격에 대한 설명이 올바르게 연결된 것은?",
    "options": [
      "블루버그(BlueBug) - 블루투스의 취약점을 활용하여 장비의 파일에 접근하는 공격으로 OPP를 사용하여 정보를 열람",
      "블루스나프(BlueSnarf) - 블루투스를 이용해 스팸처럼 명함을 익명으로 퍼뜨리는 것",
      "블루프린팅(BluePrinting) - 블루투스 공격 장치의 검색 활동을 의미",
      "블루재킹(BlueJacking) - 블루투스 장비사이의 취약한 연결 관리를 악용한 공격"
    ],
    "answer": "3",
    "explanation": "블루버그: 블루투스 장비사이의 취약한 연결 관리를 악용한 공격\n블루스나프(블루스나핑): 블루투스의 취약점을 활용하여 장비의 파일에 접근하는 공격으로 OPP를 사용하여 정보를 열람\n블루재킹: 블루투스를 이용해 스팸처럼 명함을 익명으로 퍼뜨리는 것\n\n*OPP(Obex Push Protocol)- 블루투스 장치끼리 인증 없이 정보를 간편하게 교환하기 위하여 개발됨",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 88,
    "question": "DoS(Denial of Service) 공격과 관련한 내용으로 틀린 것은?",
    "options": [
      "Ping of Death 공격은 정상 크기보다 큰 ICMP 패킷을 작은 조각(Fragment)으로 쪼개어 공격 대상이 조각화 된 패킷을 처리하게 만드는 공격 방법이다.",
      "Smurf 공격은 멀티캐스트(Multicast)를 활용하여 공격 대상이 네트워크의 임의의 시스템에 패킷을 보내게 만드는 공격이다.",
      "SYN Flooding은 존재하지 않는 클라이언트가 서버별로 한정된 접속 가능 공간에 접속한 것처럼 속여 다른 사용자가 서비스를 이용하지 못하게 하는 것이다.",
      "Land 공격은 패킷 전송 시 출발지 IP주소와 목적지 IP주소 값을 똑같이 만들어서 공격 대상에게 보내는 공격 방법이다."
    ],
    "answer": "2",
    "explanation": "멀티캐스트 x\n브로드캐스트 o",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 89,
    "question": "다음 설명에 해당하는 시스템은?",
    "options": [
      "Apache",
      "Hadoop",
      "Honeypot",
      "MapReduce"
    ],
    "answer": "3",
    "explanation": "Hadoop(하둡): 오픈 소스를 기반으로한 분산 컴퓨팅 플랫폼, 대형 스토리지, 빅데이터 관련\nMapReduce : 대용량 데이터를 분산처리하기 위한 목적으로 개발된 프로그래밍 모델\n            구글에 의해 고안\n            임의의 순서로 분산 처리후 다시 합침",
    "subject": "정보시스템 구축관리",
    "imageName": "정보처리기사_20220305_89_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 90,
    "question": "다음이 설명하는 IT 기술은?",
    "options": [
      "StackGuard",
      "Docker",
      "Cipher Container",
      "Scytale"
    ],
    "answer": "2",
    "explanation": "- StackGuard\n    - Stack 상에 일정한 주소번지에 프로그램이 선언한 canary를 심어 두어, 스택의 변조 된 경우에, canary를 체크하여 프로그램이 비정상적으로 종료 시키는 기법\n- Docker\n    - 컨테이너 응용프로그램의 배포를 자동화 하는 오픈소스 엔진\n    - SW 컨터에이너 안의 응용 프로그램들을 배치시키는 일을 자동화해 주는 오픈소스 프로젝트 이자 소프트웨어\n- Cipher Container\n    - 자바에서 암호화 복호화 기능을 제공하는 컨테이너\n- Scytale\n    - 암호화 기법으로 단순하게 문자열의 위치를 바꾸는 방법",
    "subject": "정보시스템 구축관리",
    "imageName": "정보처리기사_20220305_90_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 91,
    "question": "간트 차트(Gantt Chart)에 대한 설명으로 틀린 것은?",
    "options": [
      "프로젝트를 이루는 소작업 별로 언제 시작되고 언제 끝나야 하는지를 한 눈에 볼 수 있도록 도와준다.",
      "자원 배치 계획에 유용하게 사용된다.",
      "CPM 네트워크로부터 만드는 것이 가능하다.",
      "수평 막대의 길이는 각 작업(Task)에 필요한 인원수를 나타낸다."
    ],
    "answer": "4",
    "explanation": "인원 수 (X)\n기간 (O)",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 92,
    "question": "Python 기반의 웹 크롤링(Web Crawling) 프레임워크로 옳은 것은?",
    "options": [
      "Li-fi",
      "Scrapy",
      "CrawlCat",
      "SBAS"
    ],
    "answer": "2",
    "explanation": "- Li-fi\n    - 스펙트럼의 빛을 이용한 5세대 이동 통신 기술\n- Scrapy\n    - 파이썬 기반의 웹크롤러 프레임 워크\n    - 가볍고 빠르고 확장성이 좋음\n- SBAS(위성항법보강시스템)\n    - GPS의 오차를 보정해 신뢰성과 안정성을 높인 기법",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 93,
    "question": "Secure 코딩에서 입력 데이터의 보안 약점과 관련한 설명으로 틀린 것은?",
    "options": [
      "SQL 삽입 : 사용자의 입력 값 등 외부 입력 값이 SQL 쿼리에 삽입되어 공격",
      "크로스사이트 스크립트 : 검증되지 않은 외부 입력 값에 의해 브라우저에서 악의적인 코드가 실행",
      "운영체제 명령어 삽입 : 운영체제 명령어 파라미터 입력 값이 적절한 사전검증을 거치지 않고 사용되어 공격자가 운영체제 명령어를 조작",
      "자원 삽입 : 사용자가 내부 입력 값을 통해 시스템 내에 사용이 불가능한 자원을 지속적으로 입력함으로써 시스템에 과부하 발생"
    ],
    "answer": "4",
    "explanation": "자원 삽입 : 자원을 조작 할 수 있는 문자열을 삽입하여 시스템이 보호하는 자원에 임의로 접근 할 수 있는 취약점",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 94,
    "question": "Windows 파일 시스템인 FAT와 비교했을 때의 NTFS의 특징이 아닌 것은?",
    "options": [
      "보안에 취약",
      "대용량 볼륨에 효율적",
      "자동 압축 및 안정성",
      "저용량 볼륨에서의 속도 저하"
    ],
    "answer": "1",
    "explanation": "- FAT\n    - DOS때부터 사용되던 윈도우의 파일시스템\n    - 저용량에 적합, 호환성이 좋음,  저장가능한 파일의 최대크기가 4GB\n- NTFS\n    - FAT시스템을 대체하기 위해 개발된 윈도우 파일 시스템\n    - 사용자마다 다른 보안 적용 가능 즉 보안이 FAT보다 뛰어남\n    - 대용량 저장 가능 및 안정성이 뛰어남",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 95,
    "question": "DES는 몇 비트의 암호화 알고리즘인가?",
    "options": [
      "8",
      "24",
      "64",
      "132"
    ],
    "answer": "3",
    "explanation": "DES의 키는 7비트마다 오류 검출을 위한 정보가 1비트씩 들어가기 때문에 실질적으로는 56비트이다.\n추가적으로 AES는 암호화 알고리즘은 AES-128, AES-192, AES-256로 나뉘어지며 숫자는 비트수 이다.",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 96,
    "question": "리눅스에서 생성된 파일 권한이 644일 경우 umask 값은?",
    "options": [
      "022",
      "666",
      "777",
      "755"
    ],
    "answer": "1",
    "explanation": "파일 생성 권한 666에서 644를 빼면 022",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 97,
    "question": "다음 내용이 설명하는 로그 파일은?",
    "options": [
      "tapping",
      "xtslog",
      "linuxer",
      "wtmp"
    ],
    "answer": "4",
    "explanation": "wtmp\n- 성공한 로그인/로그아웃 정보를 담고 있는 로그파일\n- var/log/wtmp에 위치\n- last 명령어 사용\n1,2,3 전부 없는 명령어이다.\n이밖에 참고로\nutmp\n- 현재 로그인 사용자 상태 정보를 담고 있는 로그파일\nbtmp\n- 실패한 로그인 정보를 담고 있는 로그파일\nlast log\n- 마지막으로 성공한 로그인 정보를 담고있는 로그파일",
    "subject": "정보시스템 구축관리",
    "imageName": "정보처리기사_20220305_97_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 98,
    "question": "상향식 비용 산정 기법 중 LOC(원시 코드 라인 수) 기법에서 예측치를 구하기 위해 사용하는 항목이 아닌 것은?",
    "options": [
      "낙관치",
      "기대치",
      "비관치",
      "모형치"
    ],
    "answer": "4",
    "explanation": "LOC 예측치를 구하기 위해서는 낙관치, 비관치, 기대치가 필요하다.",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 99,
    "question": "OSI 7 Layer 전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도, 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은?",
    "options": [
      "PLCP(Packet Level Control Processor)",
      "Traffic Distributor",
      "Packet Tree",
      "DPI(Deep Packet Inspection)"
    ],
    "answer": "4",
    "explanation": "- PLCP(Physical Layer Convergence Procedure : 물리계층 수렴 처리)\n    - 논리적인 802.11 MAC 부계층과 물리적인 특성을 연결하는 역할\n    - 802.11 MAC 부계층이 물리적 특성에 관계없이 동작하도록 함\n- Traffic Distributor\n    - 네트워크 통신 간에 트래픽을 분배해주는 솔루션\n- DPI\n    - 네트워크에서 전송되는 패킷의 헤더와 페이로드 내 정보를 분석하는 컨텐츠 내용 분석 기술\n    - 네트워크 보안, 관리, 컨텐츠 관리 등이 목적\n\n*단어의 정의를 몰라도 하나씩 뜯어보면 Deep(내부) Packet Inspection(분석)으로 유추 가능",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 100,
    "question": "소프트웨어 개발 방법론의 테일러링(Tailoring)과 관련한 설명으로 틀린 것은?",
    "options": [
      "프로젝트 수행 시 예상되는 변화를 배제하고 신속히 진행하여야 한다.",
      "프로젝트에 최적화된 개발 방법론을 적용하기 위해 절차, 산출물 등을 적절히 변경하는 활동이다.",
      "관리 측면에서의 목적 중 하나는 최단기간에 안정적인 프로젝트 진행을 위한 사전 위험을 식별하고 제거하는 것이다.",
      "기술적 측면에서의 목적 중 하나는 프로젝트에 최적화된 기술 요소를 도입하여 프로젝트 특성에 맞는 최적의 기법과 도구를 사용하는 것이다."
    ],
    "answer": "1",
    "explanation": "테일러링 (Tailoring) : 프로젝트 상황 특성에 맞게 정의된 소프트웨어 개발 방법론 절차, 사용기법 등을 수정 및 보완하는 작업",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  }
]