[
  {
    "licenseName": "정보처리기사",
    "number": 1,
    "question": "UML 다이어그램 중 순차 다이어그램에 대한 설명으로 틀린 것은?",
    "options": [
      "객체 간의 동적 상호작용을 시간 개념을 중심으로 모델링 하는 것이다.",
      "주로 시스템의 정적 측면을 모델링하기 위해 사용한다.",
      "일반적으로 다이어그램의 수직 방향이 시간의 흐름을 나타낸다.",
      "회귀 메시지(Self-Message), 제어블록(Statement block) 등으로 구성된다."
    ],
    "answer": "2",
    "explanation": "- 순차 다이어그램은 행위 다이어그램이므로 동적이고, 순차적인 표현을 위한 다이어그램이다.",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 2,
    "question": "메시지 지향 미들웨어(Message-Oriented Middleware, MOM)에 대한 설명으로 틀린 것은?",
    "options": [
      "느리고 안정적인 응답보다는 즉각적인 응답이 필요한 온라인 업무에 적합하다.",
      "독립적인 애플리케이션을 하나의 통합된 시스템으로 묶기 위한 역할을 한다.",
      "송신측과 수신측의 연결 시 메시지 큐를 활용하는 방법이 있다.",
      "상이한 애플리케이션 간 통신을 비동기 방식으로 지원한다."
    ],
    "answer": "1",
    "explanation": "MOM(Message Oriented Middleware)\n- 메시지 기반의 비동기형 메시지를 전달하는 방식의 미들웨어이다.\n- 온라인 업무보다는 이기종 분산 데이터 시스템의 데이터 동기를 위해 많이 사용한다.",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 3,
    "question": "익스트림 프로그래밍에 대한 설명으로 틀린 것은?",
    "options": [
      "대표적인 구조적 방법론 중 하나이다.",
      "소규모 개발 조직이 불확실하고 변경이 많은 요구를 접하였을 때 적절한 방법이다.",
      "익스트림 프로그래밍을 구동시키는 원리는 상식적인 원리와 경험을 최대한 끌어 올리는 것이다.",
      "구체적인 실천 방법을 정의하고 있으며, 개발 문서 보다는 소스코드에 중점을 둔다."
    ],
    "answer": "1",
    "explanation": "",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 4,
    "question": "유스케이스(Use Case)의 구성 요소 간의 관계에 포함되지 않는 것은?",
    "options": [
      "연관",
      "확장",
      "구체화",
      "일반화"
    ],
    "answer": "3",
    "explanation": "유스케이스(Use Case)의 구성 요소 간의 관계\n- 연관관계(Association) :  유스케이스와 액터간의 상호작용이 있음을 표현한다.\n- 포함 관계(Include): 하나의 유스케이스가 다른 유스케이스의 실행을 전제로 할 때 형성되는 관계이다.\n- 확장 관계(Extend):  확장 기능 유스케이스와 확장 대상 유스케이스 사이에 형성 되는 관계이다.\n- 일반화 관계(Generalization) : 유사한 유스케이스 또는 액터를 모아 추상화한 유스케이스 또는 액터와 연결시켜 그룹을 만들어 이해도를 높이기 위한 관계이다.",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 5,
    "question": "요구사항 분석에서 비기능적(Nonfunctional) 요구에 대한 설명으로 옳은 것은?",
    "options": [
      "시스템의 처리량(Throughput), 반응 시간 등의 성능 요구나 품질 요구는 비기능적 요구에 해당하지 않는다.",
      "'차량 대여 시스템이 제공하는 모든 화면이 3초 이내에 사용자에게 보여야 한다'는 비기능적 요구이다.",
      "시스템 구축과 관련된 안전, 보안에 대한 요구사항들은 비기능적 요구에 해당하지 않는다.",
      "'금융 시스템은 조회, 인출, 입금, 송금의 기능이 있어야 한다'는 비기능적 요구이다."
    ],
    "answer": "2",
    "explanation": "기능적 요구사항 Vs 비기능적 요구사항\n- 기능적 요구사항 : 시스템이 실제로 어떻게 동작하는지에 관점을 둔 요구사항\n- 비기능적 요구사항 : 시스템 구축에 대한 성능, 보안, 품질, 안정 등에 대한 성능, 보안, 품질, 안정성등으로 실제 수행에 보조적인 요구사항\n오답피하기\n- 차량 대여 시스템이 제공하는 모든 화면이 3초 이내에 사용자에게 보여야 한다' 는 성능에 해당 하므로 비기능적 요구사항에 해당한다.",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 6,
    "question": "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?",
    "options": [
      "Package Diagram",
      "State Transition Diagram",
      "Deployment Diagram",
      "Entity-Relationship Diagram"
    ],
    "answer": "4",
    "explanation": "1,2,3 uml다이어그램 4 정보공학방법론",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 7,
    "question": "미들웨어(Middleware)에 대한 설명으로 틀린 것은?",
    "options": [
      "여러 운영체제에서 응용 프로그램들 사이에 위치한 소프트웨어이다.",
      "미들웨어의 서비스 이용을 위해 사용자가 정보 교환 방법 등의 내부 동작을 쉽게 확인할 수 있어야 한다.",
      "소프트웨어 컴포넌트를 연결하기 위한 준비된 인프라 구조를 제공한다.",
      "여러 컴포넌트를 1대 1, 1대 다, 다대 다 등 여러 가지 형태로 연결이 가능하다."
    ],
    "answer": "2",
    "explanation": "- 클라이언트와 서버 간의 통신을 담당하는 시스템 소프트웨어이다.\n- 이기종 하드웨어, 소프트웨어, 네트워크, 프로토콜, PC 환경, 운영체제 환경 등에서 시스템 간의 표준화된 연결을 도와주는 소프트웨어이다.\n- 표준화된 인터페이스를 통하여 시스템 간의 데이터 교환에 있어 일관성을 제공한다.\n- 운영체제와 애플리케이션 사이에서 중간 매개 역할을 하는 다목적 소프트웨어이다.\n\n오답\n- 미들웨어 솔루션은 미들웨어의 서비스 이용을 위해 사용자가 정보 교환 방법 등의 내부 동작을 확인할 필요가 없다.",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 8,
    "question": "UI의 설계 지침으로 틀린 것은?",
    "options": [
      "이해하기 편하고 쉽게 사용할 수 있는 환경을 제공해야 한다.",
      "주요 기능을 메인 화면에 노출하여 조작이 쉽도록 하여야 한다.",
      "치명적인 오류에 대한 부정적인 사항은 사용자가 인지할 수 없도록 한다.",
      "사용자의 직무, 연령, 성별 등 다양한 계층을 수용하여야 한다."
    ],
    "answer": "3",
    "explanation": "사용자 중심 : 사용자가 이해하기 쉽고 편하게 사용할 수 있는 환경을 제공해 실 사용자에 대한 이해가 바탕이 되어야 함\n일관성 : 버튼이나 조작 방법을 사용자가 기억하기 빠르고 쉽게 습득할 수 있도록 설계해야 함\n단순성 : 조작 방법은 가장 간단하게 작동되도록 하여 인지적 부담 최소화\n결과 예측 가능 : 작동시킬 기능만 보고도 결과 예측이 가능해야 함\n가시성 : 주요 기능을 메인 화면에 노출하여 쉬운 조작이 가능해야 함\n표준화 : 디자인을 표준화하여 기능 구조의 선행 학습 이후 쉽게 사용 가능해야 함\n접근성 : 사용자의 직무, 연령, 성별 등이 고려된 다양한 계층을 수용해야 함\n명확성 : 사용자가 개념적으로 쉽게 인지해야함\n오류 발생 해결 : 사용자가 오류에 대한 상황을 정확하게 인지할 수 있어야 함",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 9,
    "question": "객체지향 개념에서 다형성(Polymorphism)과 관련한 설명으로 틀린 것은?",
    "options": [
      "다형성은 현재 코드를 변경하지 않고 새로운 클래스를 쉽게 추가할 수 있게 한다.",
      "다형성이란 여러 가지 형태를 가지고 있다는 의미로, 여러 형태를 받아들일 수 있는 특징을 말한다.",
      "메소드 오버라이딩(Overriding)은 상위 클래스에서 정의한 일반 메소드의 구현을 하위 클래스에서 무시하고 재정의할 수 있다.",
      "메소드 오버로딩(Overloading)의 경우 매개 변수 타입은 동일하지만 메소드명을 다르게 함으로써 구현, 구분할 수 있다."
    ],
    "answer": "4",
    "explanation": "오버로딩 - 같은 이름의 메소드를 중복하여 정의하는것",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 10,
    "question": "소프트웨어 개발 영역을 결정하는 요소 중 다음 사항과 관계있는 것은?",
    "options": [
      "기능(Function)",
      "성능(Performance)",
      "제약 조건(Constraint)",
      "인터페이스(Interface)"
    ],
    "answer": "4",
    "explanation": "인터페이스: 서로 다른 두 시스템이나 소프트웨어 등을 서로 이어주는 부분 또는 접속 장치를 의미",
    "subject": "소프트웨어 설계",
    "imageName": "정보처리기사_20220424_10_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 11,
    "question": "객체에 대한 설명으로 틀린 것은?",
    "options": [
      "객체는 상태, 동작, 고유 식별자를 가진 모든 것이라 할 수 있다.",
      "객체는 공통 속성을 공유하는 클래스들의 집합이다.",
      "객체는 필요한 자료 구조와 이에 수행되는 함수들을 가진 하나의 독립된 존재이다.",
      "객체의 상태는 속성값에 의해 정의된다."
    ],
    "answer": "2",
    "explanation": "",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 12,
    "question": "속성과 관련된 연산(Operation)을 클래스 안에 묶어서 하나로 취급하는 것을 의미하는 객체지향 개념은?",
    "options": [
      "Inheritance",
      "Class",
      "Encapsulation",
      "Association"
    ],
    "answer": "3",
    "explanation": "클래스: 하나 이상의 유사한 객체들을 묶는다.\n캡슐화: 서로 관련성이 많은 데이터들과 연산들을 묶는다.",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 13,
    "question": "애자일(Agile) 프로세스 모델에 대한 설명으로 틀린 것은?",
    "options": [
      "변화에 대한 대응보다는 자세한 계획을 중심으로 소프트웨어를 개발한다.",
      "프로세스와 도구 중심이 아닌 개개인과의 상호소통을 통해 의견을 수렴한다.",
      "협상과 계약보다는 고객과의 협력을 중시한다.",
      "문서 중심이 아닌, 실행 가능한 소프트웨어를 중시한다."
    ],
    "answer": "1",
    "explanation": "",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 14,
    "question": "명백한 역할을 가지고 독립적으로 존재할 수 있는 시스템의 부분으로 넓은 의미에서는 재사용되는 모든 단위라고 볼 수 있으며, 인터페이스를 통해서만 접근할 수 있는 것은?",
    "options": [
      "Model",
      "Sheet",
      "Component",
      "Cell"
    ],
    "answer": "3",
    "explanation": "컴포넌트\n- 프로그래밍에 있어 재사용이 가능한 각각의 독립된 모듈\n- 특정 기능 수행을 위해 독립적으로 분리",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 15,
    "question": "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때, 구조 패턴이 아닌 것은?",
    "options": [
      "Adapter 패턴",
      "Bridge 패턴",
      "Builder 패턴",
      "Proxy 패턴"
    ],
    "answer": "3",
    "explanation": "[구조패턴]\n-어댑터\n-브릿지\n-컴포지트\n-데코레이터\n-퍼싸트\n-플라이웨이트\n-프록시",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 16,
    "question": "UI와 관련된 기본 개념 중 하나로, 시스템의 상태와 사용자의 지시에 대한 효과를 보여주어 사용자가 명령에 대한 진행 상황과 표시된 내용을 해석할 수 있도록 도와주는 것은?",
    "options": [
      "Feedback",
      "Posture",
      "Module",
      "Hash"
    ],
    "answer": "1",
    "explanation": "피드백(feedback): 처리된 결과를 측정하고 목표에 도달되었는가를 검사하며 불충분할 경우 다시 입력하는 요소로 사용.",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 17,
    "question": "UI의 종류로 멀티 터치(Multi-touch), 동작 인식(Gesture Recognition) 등 사용자의 자연스러운 움직임을 인식하여 서로 주고받는 정보를 제공하는 사용자 인터페이스를 의미하는 것은?",
    "options": [
      "GUI(Graphical User Interface)",
      "OUI(Organic User Interface)",
      "NUI(Natural User Interface)",
      "CLI(Command Line Interface)"
    ],
    "answer": "3",
    "explanation": "사용자 인터페이스(UI, User Interface)의 구분\n- CLI(Command Line Interface) : 텍스트 형태 인터페이스\n- GUI(Graphical User Interface) : 마우스로 선택하여 작업하는 그래픽 환경 인터페이스\n- NUI(Natural User Interface) : 사용자의 말이나 행동으로 기기 조작하는 인터페이스\n- VUI(Voice User Interface) : 사람의 음성으로 기기 조작하는 인터페이스\n- OUI(Organic User Interface) : 모든 사물과 사용자 간의 상호작용을 위한 인터페이스",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 18,
    "question": "소프트웨어 모델링과 관련한 설명으로 틀린 것은?",
    "options": [
      "모델링 작업의 결과물은 다른 모델링 작업에 영향을 줄 수 없다.",
      "구조적 방법론에서는 DFD(Data Flow Diagram), DD(Data Dictionary) 등을 사용하여 요구 사항의 결과를 표현한다.",
      "객체지향 방법론에서는 UML 표기법을 사용한다.",
      "소프트웨어 모델을 사용할 경우 개발될 소프트웨어에 대한 이해도 및 이해 당사자 간의 의사소통 향상에 도움이 된다."
    ],
    "answer": "1",
    "explanation": "모델링 작업의 결과물은 다른 모델링 작업에 영향을 줄 수 있음.\nex) 유스케이스 명세로부터 필요한 요소들을 가져와 도메인 모델로 정리할 수 있음.",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 19,
    "question": "유스케이스 다이어그램(Use Case Diagram)에 관련된 내용으로 틀린 것은?",
    "options": [
      "시스템과 상호작용하는 외부시스템은 액터로 파악해서는 안된다.",
      "유스케이스는 사용자 측면에서의 요구사항으로, 사용자가 원하는 목표를 달성하기 위해 수행할 내용을 기술한다.",
      "시스템 액터는 다른 프로젝트에서 이미 개발되어 사용되고 있으며, 본 시스템과 데이터를 주고받는 등 서로 연동되는 시스템을 말한다.",
      "액터가 인식할 수 없는 시스템 내부의 기능을 하나의 유스케이스로 파악해서는 안된다."
    ],
    "answer": "1",
    "explanation": "액터: 시스템과 상호작용하는 모든 것(사람, 기계, 시스템 등)",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 20,
    "question": "소프트웨어 아키텍처 모델 중 MVC(Model-View-Controller)와 관련한 설명으로 틀린 것은?",
    "options": [
      "MVC 모델은 사용자 인터페이스를 담당하는 계층의 응집도를 높일 수 있고, 여러 개의 다른 UI를 만들어 그 사이에 결합도를 낮출 수 있다.",
      "모델(Model)은 뷰(View)와 제어(Controller) 사이에서 전달자 역할을 하며, 뷰마다 모델 서브시스템이 각각 하나씩 연결된다.",
      "뷰(View)는 모델(Model)에 있는 데이터를 사용자 인터페이스에 보이는 역할을 담당한다.",
      "제어(Controller)는 모델(Model)에 명령을 보냄으로써 모델의 상태를 변경할 수 있다."
    ],
    "answer": "2",
    "explanation": "한 개의 모델에 대해 여러 개의 뷰를 만들 수 있음",
    "subject": "소프트웨어 설계",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 21,
    "question": "통합 테스트(Integration Test)와 관련한 설명으로 틀린 것은?",
    "options": [
      "시스템을 구성하는 모듈의 인터페이스와 결합을 테스트하는 것이다.",
      "하향식 통합 테스트의 경우 넓이 우선(Breadth First) 방식으로 테스트를 할 모듈을 선택할 수 있다.",
      "상향식 통합 테스트의 경우 시스템 구조도의 최상위에 있는 모듈을 먼저 구현하고 테스트한다.",
      "모듈 간의 인터페이스와 시스템의 동작이 정상적으로 잘되고 있는지를 빨리 파악하고자 할 때 상향식 보다는 하향식 통합 테스트를 사용하는 것이 좋다."
    ],
    "answer": "3",
    "explanation": "상향식 통합 테스트 (Bottom Up Integration Test)\n- 프로그램의 하위 모듈에서 상위 모듈 방향으로 통합\n- 하나의 주요 제어 모듈과 관련된 종속 모듈의 그룹인 클러스터(Cluster)필요\n하향식 통합 테스트 (Top Down Integration Test)\n- 상위 모듈에서 하위 모듈 방향으로 통합\n- 깊이 우선 통합법, 넓이 우선 통합법 사용\n- 초기부터 사용자에게 시스템 구조를 보여줌",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 22,
    "question": "다음과 같이 레코드가 구성되어 있을 때, 이진 검색 방법으로 14를 찾을 경우 비교되는 횟수는?",
    "options": [
      "2",
      "3",
      "4",
      "5"
    ],
    "answer": "2",
    "explanation": "",
    "subject": "소프트웨어 개발",
    "imageName": "정보처리기사_20220424_22_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 23,
    "question": "소프트웨어 공학에서 워크스루(Walkthrough)에 대한 설명으로 틀린 것은?",
    "options": [
      "사용사례를 확장하여 명세하거나 설계 다이어그램, 원시코드, 테스트 케이스 등에 적용할 수 있다.",
      "복잡한 알고리즘 또는 반복, 실시간 동작, 병행 처리와 같은 기능이나 동작을 이해하려고 할 때 유용하다.",
      "인스펙션(Inspection)과 동일한 의미를 가진다.",
      "단순한 테스트 케이스를 이용하여 프로덕트를 수작업으로 수행해 보는 것이다."
    ],
    "answer": "3",
    "explanation": "워크스루: 요구사항 명세서 작성자를 포함하여 사전 검토한 후에 짧은 검토 회의를 통해 결함을 발견\n인스펙션: 요구사항 명세서 작성자를 제외한 다른 검토 전문가들이 요구사항 명세서를 확인하면서 결함을 발견.",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 24,
    "question": "소프트웨어의 개발과정에서 소프트웨어의 변경사항을 관리하기 위해 개발된 일련의 활동을 뜻하는 것은?",
    "options": [
      "복호화",
      "형상관리",
      "저작권",
      "크랙"
    ],
    "answer": "2",
    "explanation": "복호화 - 디코딩, 즉 부호화된 데이터를 부호화 되기 전 형태로 바꾸어, 사람이 읽을 수 있는 형태로 되돌려 놓는것\n저작권 - 창작물을 만든이가 자기 저작물에 대해 가지는 법적권리\n크랙 - 소프트웨어를 수정하여 소프트웨어를 크랙하는 사람이 원하지 않는 기능들, 보통은 수정 방식(복사 보호, 소프트웨어 조작 보호)을 비활성화하거나 제거하는 일",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 25,
    "question": "테스트 케이스와 관련한 설명으로 틀린 것은?",
    "options": [
      "테스트의 목표 및 테스트 방법을 결정하기 전에 테스트 케이스를 작성해야 한다.",
      "프로그램에 결함이 있더라도 입력에 대해 정상적인 결과를 낼 수 있기 때문에 결함을 검사할 수 있는 테스트 케이스를 찾는 것이 중요하다.",
      "개발된 서비스가 정의된 요구 사항을 준수하는지 확인하기 위한 입력 값과 실행 조건, 예상 결과의 집합으로 볼 수 있다.",
      "테스트 케이스 실행이 통과되었는지 실패하였는지 판단하기 위한 기준을 테스트 오라클(Test Oracle)이라고 한다."
    ],
    "answer": "1",
    "explanation": "테스트케이스(Test Case)\n- 구현된 소프트웨어가 사용자의 요구사항을 정확하게 준수했는지를 확인하기 위해 설계된 입력값, 실행 조건, 기대 결과 등으로 구성된 테스트 항목에 대한 명세서를 의미한다.\n- 테스트의 목표 및 테스트 방법을 결정하고 테스트 케이스를 작성해야 한다.",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 26,
    "question": "객체지향 개념을 활용한 소프트웨어 구현과 관련한 설명 중 틀린 것은?",
    "options": [
      "객체(Object)란 필요한 자료 구조와 수행되는 함수들을 가진 하나의 독립된 존재이다.",
      "JAVA에서 정보은닉(Information Hiding)을 표기할 때 private의 의미는 '공개'이다.",
      "상속(Inheritance)은 개별 클래스를 상속 관계로 묶음으로써 클래스 간의 체계화된 전체 구조를 파악하기 쉽다는 장점이 있다.",
      "같은 클래스에 속하는 개개의 객체이자 하나의 클래스에서 생성된 객체를 인스턴스(Instance)라고 한다."
    ],
    "answer": "2",
    "explanation": "- JAVA에서 정보은닉(InformationHiding)을 표기할 때 private의 의미는 외부에서 클래스 내부 정보에 접근하지 못하도록 하는 '접근금지'이다.",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 27,
    "question": "DRM(Digital Rights Management)과 관련한 설명으로 틀린 것은?",
    "options": [
      "디지털 콘텐츠와 디바이스의 사용을 제한하기 위해 하드웨어 제조업자, 저작권자, 출판업자 등이 사용할 수 있는 접근 제어 기술을 의미한다.",
      "디지털 미디어의 생명 주기 동안 발생하는 사용 권한 관리, 과금, 유통 단계를 관리하는 기술로도 볼 수 있다.",
      "클리어링 하우스(Clearing House)는 사용자에게 콘텐츠 라이센스를 발급하고 권한을 부여해주는 시스템을 말한다.",
      "원본을 안전하게 유통하기 위한 전자적 보안은 고려하지 않기 때문에 불법 유통과 복제의 방지는 불가능하다."
    ],
    "answer": "4",
    "explanation": "DRM(Digital Right Management)\n- 디지털 콘텐트의 지적재산권보호, 관리 기능 및 안전한 유통과 배포를 보장하는 솔루션이다.\n- 디지털 콘텐트의 지적재산권을 보호하는 권한통제기술, 사용권한제어 기술, 패키징 기술, 라이선스 관리를 포함한 유통체계이다.\n- 디지털 콘텐츠와 디바이스의 사용을 제한하기 위해 하드웨어 제조업자, 저작권자, 출판업자 등이 사용할 수 있는 접근 제어 기술을 의미한다.",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 28,
    "question": "위험 모니터링의 의미로 옳은 것은?",
    "options": [
      "위험을 이해하는 것",
      "첫 번째 조치로 위험을 피할 수 있도록 하는 것",
      "위험 발생 후 즉시 조치하는 것",
      "위험 요소 징후들에 대하여 계속적으로 인지하는 것"
    ],
    "answer": "4",
    "explanation": "위험 모니터링(monitoring)의 의미\n-> 위험 요소 징후들에 대하여 계속적으로 인지하는 것",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 29,
    "question": "동시에 소스를 수정하는 것을 방지하며 다른 방향으로 진행된 개발 결과를 합치거나 변경 내용을 추적할 수 있는 소프트웨어 버전 관리 도구는?",
    "options": [
      "RCS(Revision Control System)",
      "RTS(Reliable Transfer Service)",
      "RPC(Remote Procedure Call)",
      "RVS(Relative Version System)"
    ],
    "answer": "1",
    "explanation": "RCS(Revision Control System)\n- CVS와의 차이점은 소스 파일의 수정을 한 사람만으로 제한한다.\n- 다수의 사용자가 동시에 파일 수정을 할 수 없도록 파일 잠금 방식으로 버전을 관리하는 도구이다.\n- 다른 방향으로 진행된 개발 결과를 합치거나 변경 내용을 추적할 수 있다.",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 30,
    "question": "화이트박스 테스트와 관련한 설명으로 틀린 것은?",
    "options": [
      "화이트박스 테스트의 이해를 위해 논리흐름도(Logic-Flow Diagram)를 이용할 수 있다.",
      "테스트 데이터를 이용해 실제 프로그램을 실행함으로써 오류를 찾는 동적 테스트(Dynamic Test)에 해당한다.",
      "프로그램의 구조를 고려하지 않기 때문에 테스트 케이스는 프로그램 또는 모듈의 요구나 명세를 기초로 결정한다.",
      "테스트 데이터를 선택하기 위하여 검증기준(Test Coverage)을 정한다."
    ],
    "answer": "3",
    "explanation": "",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 31,
    "question": "알고리즘과 관련한 설명으로 틀린 것은?",
    "options": [
      "주어진 작업을 수행하는 컴퓨터 명령어를 순서대로 나열한 것으로 볼 수 있다.",
      "검색(Searching)은 정렬이 되지 않은 데이터 혹은 정렬이 된 데이터 중에서 키값에 해당되는 데이터를 찾는 알고리즘이다.",
      "정렬(Sorting)은 흩어져있는 데이터를 키값을 이용하여 순서대로 열거하는 알고리즘이다.",
      "선형 검색은 검색을 수행하기 전에 반드시 데이터의 집합이 정렬되어 있어야 한다."
    ],
    "answer": "4",
    "explanation": "선형 검색 - 처음부터 끝까지 하나씩 순서대로 비교하며 원하는 값을 찾아내는 검색",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 32,
    "question": "버블 정렬을 이용하여 다음 자료를 오름차순으로 정렬할 경우 PASS 1의 결과는?",
    "options": [
      "6, 9, 7, 3, 5",
      "3, 9, 6, 7, 5",
      "3, 6, 7, 9, 5",
      "6, 7, 3, 5, 9"
    ],
    "answer": "4",
    "explanation": "버블 정렬은 첫위치부터 시작해서 오른쪽값과 비교\nPASS 1 첫 버블 정렬이 끝난상태\n96 비교 -> 69735 -> 97비교 -> 67935 -> 93비교 -> 67395 -> 95비교 -> 67359",
    "subject": "소프트웨어 개발",
    "imageName": "정보처리기사_20220424_32_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 33,
    "question": "다음은 인스펙션(Inspection) 과정을 표현한 것이다. (가)~(마)에 들어갈 말을 보기에서 찾아 바르게 연결한 것은?",
    "options": [
      "(가) - ㉡, (나) - ㉢",
      "(나) - ㉠, (다) - ㉢",
      "(다) - ㉢, (라) - ㉤",
      "(라) - ㉣, (마) - ㉢"
    ],
    "answer": "2",
    "explanation": "가 - 사전교육\n나 - 준비\n다 - 인스펙션 회의\n라 - 수정\n마 - 후속조치",
    "subject": "소프트웨어 개발",
    "imageName": "정보처리기사_20220424_33_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 34,
    "question": "소프트웨어를 보다 쉽게 이해할 수 있고 적은 비용으로 수정할 수 있도록 겉으로 보이는 동작의 변화 없이 내부구조를 변경하는 것은?",
    "options": [
      "Refactoring",
      "Architecting",
      "Specification",
      "Renewal"
    ],
    "answer": "1",
    "explanation": "",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 35,
    "question": "단위 테스트(Unit Test)와 관련한 설명으로 틀린 것은?",
    "options": [
      "구현 단계에서 각 모듈의 개발을 완료한 후 개발자가 명세서의 내용대로 정확히 구현되었는지 테스트한다.",
      "모듈 내부의 구조를 구체적으로 볼 수 있는 구조적 테스트를 주로 시행한다.",
      "필요 데이터를 인자를 통해 넘겨주고, 테스트 완료 후 그 결과값을 받는 역할을 하는 가상의 모듈을 테스트 스텁(Stub)이라고 한다.",
      "테스트할 모듈을 호출하는 모듈도 있고, 테스트할 모듈이 호출하는 모듈도 있다."
    ],
    "answer": "3",
    "explanation": "필요 데이터를 인자를 통해 넘겨주고, 테스트 완료 후 그 결과값을 받는 역할을 하는 가상의 모듈을 테스트 드라이버(test driver)라고 한다. 반대로 테스트 스텁(test stub)은 인자를 통해 받은 값을 가지고 수행한 후 그 결과를 테스트할 모듈에 넘겨주는 역할을 한다.",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 36,
    "question": "IDE(Integrated Development Environment) 도구의 각 기능에 대한 설명으로 틀린 것은?",
    "options": [
      "Coding - 프로그래밍 언어를 가지고 컴퓨터 프로그램을 작성할 수 있는 환경을 제공",
      "Compile - 저급언어의 프로그램을 고급언어 프로그램으로 변환하는 기능",
      "Debugging - 프로그램에서 발견되는 버그를 찾아 수정할 수 있는 기능",
      "Deployment - 소프트웨어를 최종 사용자에게 전달하기 위한 기능"
    ],
    "answer": "2",
    "explanation": "Compile - 주어진 언어로 작성된 컴퓨터 프로그램을 다른 언어의 동등한 프로그램으로 변환하는 기능",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 37,
    "question": "아래 Tree 구조에 대하여 후위 순회(Postorder) 한 결과는?",
    "options": [
      "a → b → d → c → e → g → h → f",
      "d → b → g → h → e → f → c → a",
      "d → b → a → g → e → h → c → f",
      "a → b → d → g → e → h → c → f"
    ],
    "answer": "2",
    "explanation": "전위 운행 (PreOrder) => Root, Left, Right 순서\n중위 운행 (InOrder) => Left, Root, Right 순서\n후위 운행 (PostOrder) => Left, Right, Root 순서",
    "subject": "소프트웨어 개발",
    "imageName": "정보처리기사_20220424_37_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 38,
    "question": "인터페이스 구현 시 사용하는 기술로 속성-값 쌍(Attribute-Value Pairs)으로 이루어진 데이터 오브젝트를 전달하기 위해 사용하는 개방형 표준 포맷은?",
    "options": [
      "JSON",
      "HTML",
      "AVPN",
      "DOF"
    ],
    "answer": "1",
    "explanation": "JSON(JavaScript Object Notation)\n- 속성-값 쌍(Attribute-Value Pairs)으로 이루어진 데이터 오브젝트를 전달하기 위해 사용하는 개방형 표준 포맷이다.\n- AJAX(Asynchronous Javascript and XML)에서 많이 사용되고 XML을 대체하는 주요 데이터 포맷이다.\n- 언어 독립형 데이터 포맷으로 다양한 프로그래밍 언어에서 사용되고 있다.",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 39,
    "question": "순서가 있는 리스트에서 데이터의 삽입(Push), 삭제(Pop)가 한 쪽 끝에서 일어나며 LIFO(Last-In-First-Out)의 특징을 가지는 자료구조는?",
    "options": [
      "Tree",
      "Graph",
      "Stack",
      "Queue"
    ],
    "answer": "3",
    "explanation": "",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 40,
    "question": "다음 중 단위 테스트 도구로 사용될 수 없는 것은?",
    "options": [
      "CppUnit",
      "JUnit",
      "HttpUnit",
      "IgpUnit"
    ],
    "answer": "4",
    "explanation": "CppUnit - C++ 프로그래밍 언어용 단위 테스트 도구\nJUnit - 자바 프로그래밍 언어용 단위 테스트 도구",
    "subject": "소프트웨어 개발",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 41,
    "question": "다음 조건을 모두 만족하는 정규형은?",
    "options": [
      "BCNF",
      "제1정규형",
      "제2정규형",
      "제3정규형"
    ],
    "answer": "1",
    "explanation": "정규화 과정 [도부이결다조]\n- 1NF : 모든 *도*메인이 원자 값으로만 구성\n- 2NF : 기본키가 아닌 속성이 기본키에 대한 완전 함수적 종속을 만족, *부*분적 함수 종속을 제거한 정규형\n- 3NF : 기본키가 아닌 모든 속성이 기본키에 대해 *이*행적 함수 종속 관계를 만족하지 않는 정규형\n- BCNF : 모든 *결*정자가 후보키인 정규형, 종속성 보존X\n- 4NF : *다*치 종속이 성립하는 경우, R의 모든 속성이 A에 함수적 종속 관계를 만족\n- 5NF : 모든 *조*인 종속이 R의 후보키를 통해서만 성립되는 정규형\n\n결정자라는 키워드가 있기 때문에 BCNF",
    "subject": "데이터베이스 구축",
    "imageName": "정보처리기사_20220424_41_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 42,
    "question": "데이터베이스의 트랜잭션 성질들 중에서 다음 설명에 해당하는 것은?",
    "options": [
      "Atomicity",
      "Consistency",
      "Isolation",
      "Durability"
    ],
    "answer": "1",
    "explanation": "트랜잭션의 특성\n- 원자성(Atomicity) : 완전하게 수행 완료되지 않으면 전혀 수행되지 않아야 함\n- 일관성(Consistency) : 시스템의 고정 요소는 트랜잭션 수행 전후에 같아야 함\n- 격리성(Isolation, 고립성) : 트랜잭션 실행 시 다른 트랜잭션의 간섭을 받지 않아야 함\n- 영속성(Durability, 지속성) : 트랜잭션의 완료 결과가 데이터베이스에 영구히 기억됨",
    "subject": "데이터베이스 구축",
    "imageName": "정보처리기사_20220424_42_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 43,
    "question": "분산 데이터베이스 시스템과 관련한 설명으로 틀린 것은?",
    "options": [
      "물리적으로 분산된 데이터베이스 시스템을 논리적으로 하나의 데이터베이스 시스템처럼 사용할 수 있도록 한 것이다.",
      "물리적으로 분산되어 지역별로 필요한 데이터를 처리할 수 있는 지역 컴퓨터(Local Computer)를 분산 처리기(Distributed Processor)라고 한다.",
      "분산 데이터베이스 시스템을 위한 통신 네트워크 구조가 데이터 통신에 영향을 주므로 효율적으로 설계해야 한다.",
      "데이터베이스가 분산되어 있음을 사용자가 인식할 수 있도록 분산 투명성(Distribution Transparency)을 배제해야 한다."
    ],
    "answer": "4",
    "explanation": "분산 데이터베이스의 목표\n- 위치 투명성(Location Transparency)：하드웨어와 소 프트웨어의 물리적 위치를 사용자가 알 필요가 없다.\n- 중복(복제) 투명성(Replication Transparency)：사용 자에게 통지할 필요없이 시스템 안에 파일들과 자원들의 부가적인 복사를 자유롭게할수 있다.\n- 병행 투명성(Concurrency Transparency)：다중 사용 자들이 자원들을 자동으로 공유할 수 있다.\n- 장애 투명성(Fai ure Transparency)：사용자들은 어느 위치의 시스템에 장애가 발생했는지 알 필요가 없다.",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 44,
    "question": "다음 테이블을 보고 강남지점의 판매량이 많은 제품부터 출력되도록 할 때 다음 중 가장 적절한 SQL 구문은? (단, 출력은 제품명과 판매량이 출력되도록 한다.)",
    "options": [
      "SELECT 제품명, 판매량 FROM 푸드",
      "SELECT 제품명, 판매량 FROM 푸드",
      "SELECT 제품명, 판매량 FROM 푸드",
      "SELECT 제품명, 판매량 FROM 푸드"
    ],
    "answer": "4",
    "explanation": "- 판매량이 많은 제품부터 출력되도록 하려면 내림차순 정렬을 적용해야 한다. SQL에서 정렬은 ORDER BY을 사용하며 내림차순은 DESC를 사용한다. 오름차순의 경우 생략이나 ASC를 사용한다.",
    "subject": "데이터베이스 구축",
    "imageName": "정보처리기사_20220424_44_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 45,
    "question": "데이터베이스의 인덱스와 관련한 설명으로 틀린 것은?",
    "options": [
      "문헌의 색인, 사전과 같이 데이터를 쉽고 빠르게 찾을 수 있도록 만든 데이터 구조이다.",
      "테이블에 붙여진 색인으로 데이터 검색 시 처리 속도 향상에 도움이 된다.",
      "인덱스의 추가, 삭제 명령어는 각각 ADD, DELETE이다.",
      "대부분의 데이터베이스에서 테이블을 삭제하면 인덱스도 같이 삭제된다."
    ],
    "answer": "3",
    "explanation": "인덱스(Index)\n- 데이터베이스 성능에 많은 영향을 주는 DBMS의 구성 요소로 테이블과 클러스터에 연관되어 독립적인 저장 공간을 보유하며, 데이터베이스에 저장된 자료를 더욱 빠르게 조회하기 위하여 별도로 구성한 순서 데이터를 말한다.\n- 대부분의 데이터베이스에서 테이블을 삭제하면 인덱스도 같이 삭제된다.\n오답피하기\n- 인덱스 생성 : CREATE\n- 인덱스 삭제 : DROP",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 46,
    "question": "물리적 데이터베이스 구조의 기본 데이터 단위인 저장 레코드의 양식을 설계할 때 고려 사항이 아닌 것은?",
    "options": [
      "데이터 타입",
      "데이터 값의 분포",
      "트랜잭션 모델링",
      "접근 빈도"
    ],
    "answer": "3",
    "explanation": "저장 레코드 양식 설계 시 고려 사항\n- 데이터 타입, 데이터 값의 분포, 접근 빈도\n오답피하기 | 트랜잭션 모델링\n- 트랜잭션을 개념적 시스템 독립적으로 정의한다.\n- 트랜잭션의 입출력 기능, 형태만 정의한다.\n- 검색, 갱신, 혼합(검색, 갱신)",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 47,
    "question": "SQL의 기능에 따른 분류 중에서 REVOKE문과 같이 데이터의 사용 권한을 관리하는데 사용하는 언어는?",
    "options": [
      "DDL(Data Definition Language)",
      "DML(Data Manipulation Language)",
      "DCL(Data Control Language)",
      "DUL(Data User Language)"
    ],
    "answer": "3",
    "explanation": "DCL 종류\n- COMMIT : 명령어로 수행된 결과를 실제 물리적 디스크로 저장하고, 명령어로 수행을 성공적으로 완료하였음을 선언한다.\n- ROLLBACK : 명령어로 수행을 실패하였음을 알리고, 수행된 결과를 원상복구시킨다.\n- GRANT : 데이터베이스 사용자에게 사용 권한 부여한다.\n- REVOKE : 데이터베이스 사용자로부터 사용 권한 취소한다.",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 48,
    "question": "데이터 사전에 대한 설명으로 틀린 것은?",
    "options": [
      "시스템 카탈로그 또는 시스템 데이터베이스라고도 한다.",
      "데이터 사전 역시 데이터베이스의 일종이므로 일반 사용자가 생성, 유지 및 수정 할 수 있다.",
      "데이터베이스에 대한 데이터인 메타데이터(Metadata)를 저장하고 있다.",
      "데이터 사전에 있는 데이터에 실제로 접근하는 데 필요한 위치 정보는 데이터 디렉토리(Data Directory)라는 곳에서 관리한다."
    ],
    "answer": "2",
    "explanation": "데이터 사전(Data Dictionary)\n- 시스템 자신이 필요로 하는 여러 가지 객체(기본 테이블, 뷰, 인덱스, 데이터베이스, 패키지, 접근 권한 등)에 관한 정보를 포함하고 있는 시스템 데이터베이스이다.\n- 시스템 카탈로그(System Catalog), 메타 데이터(Meta Data)라고도 한다.\n- 시스템 카탈로그 자체도 시스템 테이블로 구성되어 있어 SQL 문을 이용하여 내용 검색이 가능하다.\n- 사용자가 시스템 카탈로그를 직접 갱신할 수 없다.\n- SQL 문으로 여러 가지 객체에 변화를 주면 시스템이 자동으로 갱신한다.",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 49,
    "question": "데이터베이스에서 릴레이션에 대한 설명으로 틀린 것은?",
    "options": [
      "모든 튜플은 서로 다른 값을 가지고 있다.",
      "하나의 릴레이션에서 튜플은 특정한 순서를 가진다.",
      "각 속성은 릴레이션 내에서 유일한 이름을 가진다.",
      "모든 속성 값은 원자 값(atomic value)을 가진다."
    ],
    "answer": "2",
    "explanation": "* 릴레이션의 특징\n- 튜플의 유일성 : 모든 튜플은 서로 다른값을 갖는다\n- 튜플의 무순서성 : 하나의 릴레이션에 튜플에 순서는 없다\n- 속성의 원자성 : 속성값은 원자값을 갖는다\n- 속성의 무순서성 : 각 속성은 릴레이션내에서 유일한 이름을 가지며, 순서는 큰 의미가 없다",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 50,
    "question": "데이터베이스에서의 뷰(View)에 대한 설명으로 틀린 것은?",
    "options": [
      "뷰는 다른 뷰를 기반으로 새로운 뷰를 만들 수 있다.",
      "뷰는 일종의 가상 테이블이며, update에는 제약이 따른다.",
      "뷰는 기본 테이블을 만드는 것처럼 create view를 사용하여 만들 수 있다.",
      "뷰는 논리적으로 존재하는 기본 테이블과 다르게 물리적으로만 존재하며 카탈로그에 저장된다."
    ],
    "answer": "4",
    "explanation": "뷰는 논리적으로만 존재한다.",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 51,
    "question": "트랜잭션의 상태 중 트랜잭션의 마지막 연산이 실행된 직후의 상태로, 모든 연산의 처리는 끝났지만 트랜잭션이 수행한 최종 결과를 데이터베이스에 반영하지 않은 상태는?",
    "options": [
      "Active",
      "Partially Committed",
      "Committed",
      "Aborted"
    ],
    "answer": "2",
    "explanation": "Partially Committed: 마지막 연산이 실행된 직후의 상태로 아직 Commit 연산 실행 전\nCommitted: 트랜잭션이 실행을 성공적으로 완료하여 Commit 연산을 수행한 상태",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 52,
    "question": "SQL의 명령을 사용 용도에 따라 DDL, DML, DCL로 구분할 경우, 그 성격이 나머지 셋과 다른 것은?",
    "options": [
      "SELECT",
      "UPDATE",
      "INSERT",
      "GRANT"
    ],
    "answer": "4",
    "explanation": "* DML\n   1. SELECT : 테이블에서 조건에 맞는 튜플 검색\n   2. INSERT : 테이블에 새로운 튜플 삽입\n   3. UPDATE : 테이블에서 조건에 맞는 튜플의 내용 갱신\n   4. DELETE : 테이블에서 조건에 맞는 튜플 삭제\n* DCL\n   1. COMMIT : 명령에 의해 수행된 결과를 실제 물리적 디스크로 저장하고, 데이터베이스 조작 작업이 정상적으로 완료 됐음을 알려주는 명령어\n   2. ROLLBACK : 아직 COMMIT 되지 않은 변경된 모든내용 들을 취소하고 , 데이터베이스를 이전 상태로 되돌리는 명령어\n   3. GRANT : 데이터베이스 사용자에게 사용 권한 부여\n   4. REVOKE : 데이터베이스 사용자의 사용 권한 취소",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 53,
    "question": "키의 종류 중 유일성과 최소성을 만족하는 속성 또는 속성들의 집합은?",
    "options": [
      "Atomic key",
      "Super key",
      "Candidate key",
      "Test key"
    ],
    "answer": "3",
    "explanation": "Super key(슈퍼키) - 속성들의 집합으로 구성된 키, 릴레이션을 구성하는 모든 튜플들 중 슈퍼키로 구성된 속성의 집합과 동일한 값은 나타나지 않는다.\nCandidate key(후보키) - 튜플을 유일하게 식별하기 위해 사용하는 속성들의 부분집합",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 54,
    "question": "데이터베이스에서 개념적 설계 단계에 대한 설명으로 틀린 것은?",
    "options": [
      "산출물로 E-R Diagram을 만들 수 있다.",
      "DBMS에 독립적인 개념 스키마를 설계한다.",
      "트랜잭션 인터페이스를 설계 및 작성한다.",
      "논리적 설계 단계의 앞 단계에서 수행된다."
    ],
    "answer": "3",
    "explanation": "데이터베이스 설계단계에서의 트랜잭션 설계단계\n- 개념설계 : 트랜잭션 모델링\n- 논리설계 : 트랜잭션 인터페이스 설계\n- 물리설계 : 트랜잭션 세부설계",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 55,
    "question": "테이블의 기본키(Primary Key)로 지정된 속성에 관한 설명으로 가장 거리가 먼 것은?",
    "options": [
      "NOT NULL로 널 값을 가지지 않는다.",
      "릴레이션에서 튜플을 구별할 수 있다.",
      "외래키로 참조될 수 있다.",
      "검색할 때 반드시 필요하다."
    ],
    "answer": "4",
    "explanation": "기본키 - 후보키 중에서 선정된 주키(MAIN KEY)로 중복된 값을 가질 수 없다.\n- 한 릴레이션에서 특정 튜플을 유일하게 구별할 수 있는 속성\n- 기본키는 후보키의 성질을 갖는다. 즉 튜플을 식별하기 위해 반드시 필요한 키\n- 기본키는 NULL 값을 가질 수 없다. 즉 기본키로 설정된 속성에는 NULL값이 있어서는 안된다.",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 56,
    "question": "데이터 모델의 구성 요소 중 데이터 구조에 따라 개념 세계나 컴퓨터 세계에서 실제로 표현된 값들을 처리하는 작업을 의미하는 것은?",
    "options": [
      "Relation",
      "Data Structure",
      "Constraint",
      "Operation"
    ],
    "answer": "4",
    "explanation": "데이터 모델의 구성 요소\n- 구조(Structure):논리적인 개체 타입들 간의 관계, 데이터 구조 및 정적 성질을 표현\n- 연산(Operation):실제 데이터를 처리하는 작업에 대한 명세로, 조작하는 기본 도구\n- 제약 조건(Constraint):DB에 저장될 수 있는 실제 데이터의 논리적인 제약 조건",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 57,
    "question": "다음 [조건]에 부합하는 SQL문을 작성하고자 할 때, [SQL문]의 빈칸에 들어갈 내용으로 옳은 것은? (단, '팀코드' 및 '이름'은 속성이며, '직원'은 테이블이다.)",
    "options": [
      "WHERE 이름 = '정도일'",
      "SELECT 팀코드 FROM 이름",
      "WHERE 직원 = '정도일'",
      "SELECT 팀코드 FROM 직원"
    ],
    "answer": "4",
    "explanation": "- 하위 질의문은 하위 질의를 먼저 처리하고 검색된 결과는 상위 질의에 적용되어 검색된다.\n- 직원 테이블에서 “정도일” 팀원의 팀 코드를 검색하여 상위 질의에 반환한다.",
    "subject": "데이터베이스 구축",
    "imageName": "정보처리기사_20220424_57_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 58,
    "question": "무결성 제약조건 중 개체 무결성 제약조건에 대한 설명으로 옳은 것은?",
    "options": [
      "릴레이션 내의 튜플들이 각 속성의 도메인에 정해진 값만을 가져야 한다.",
      "기본키는 NULL 값을 가져서는 안되며 릴레이션 내에 오직 하나의 값만 존재해야 한다.",
      "자식 릴레이션의 외래키는 부모 릴레이션의 기본키와 도메인이 동일해야 한다.",
      "자식 릴레이션의 값이 변경될 때 부모 릴레이션의 제약을 받는다."
    ],
    "answer": "2",
    "explanation": "기본키(Primary Key)\n- 테이블의 각 레코드를 고유하게 식별하는 필드나 필드의 집합이다.\n- 테이블에 기본키 설정은 필수가 아니다.\n- 기본키를 설정하지 않고도 다른 테이블과의 관계를 설정할 수 있다.\n- 기본키는 혼합속성(다수 필드)에 설정할 수 있다.",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 59,
    "question": "관계 데이터 모델에서 릴레이션(Relation)에 포함되어 있는 튜플(Tuple)의 수를 무엇이라고 하는가?",
    "options": [
      "Degree",
      "Cardinality",
      "Attribute",
      "Cartesian product"
    ],
    "answer": "2",
    "explanation": "- 차수(Degree) : 속성의 수\n- 카디널리티(Cardinality) : 튜플의 수 (기수)",
    "subject": "데이터베이스 구축",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 60,
    "question": "사용자 'PARK'에게 테이블을 생성할 수 있는 권한을 부여하기 위한 SQL문의 구성으로 빈칸에 적합한 내용은?",
    "options": [
      "CREATE TABLE TO",
      "CREATE TO",
      "CREATE FROM",
      "CREATE TABLE FROM"
    ],
    "answer": "1",
    "explanation": "PARK 에게 [CREATE TABLE] 권한 취소\nREVOKE CREATE TABLE FROM PARK;",
    "subject": "데이터베이스 구축",
    "imageName": "정보처리기사_20220424_60_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 61,
    "question": "C언어에서 문자열 처리 함수의 서식과 그 기능의 연결로 틀린 것은?",
    "options": [
      "strlen(s) - s의 길이를 구한다.",
      "strcpy(s1, s2) - s2를 s1으로 복사한다.",
      "strcmp(s1, s2) - s1과 s2를 연결한다.",
      "strrev(s)－s를 거꾸로 변환한다."
    ],
    "answer": "3",
    "explanation": "strcat - 문자열 연결 함수",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 62,
    "question": "다음 C언어 프로그램이 실행되었을 때, 실행 결과는?",
    "options": [
      "０",
      "２",
      "５",
      "14"
    ],
    "answer": "2",
    "explanation": "a && b -> 1      AND연산\na || b -> 1      OR연산\n!c -> 0          NOT연산\n1 + 1 + 0 = 2 (최종정답)\n# C언어 연산자에서는 0이 아닌 모든값은 1(TRUE)로 본다.\n그래서 a=1 b=1 c=1 로 바꿔서 대입해도 같은결과가 나온다",
    "subject": "프로그래밍 언어 활용",
    "imageName": "정보처리기사_20220424_62_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 63,
    "question": "다음 C언어 프로그램이 실행되었을 때, 실행 결과는?",
    "options": [
      "30",
      "60",
      "80",
      "120"
    ],
    "answer": "2",
    "explanation": "ob1.c[i] = i\nob2.c[i] = i + i\nob1.a = ob1.a + ob1.c[i]  =  0+2+4+6 + 8  = 20\nob2.a = ob2.a + ob2.c[i]  =  0+4+8+12+16 = 40\n20 + 40 = 60",
    "subject": "프로그래밍 언어 활용",
    "imageName": "정보처리기사_20220424_63_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 64,
    "question": "IP 프로토콜에서 사용하는 필드와 해당 필드에 대한 설명으로 틀린 것은?",
    "options": [
      "Header Length는 IP 프로토콜의 헤더 길이를 32비트 워드 단위로 표시한다.",
      "Packet Length는 IP 헤더를 제외한 패킷 전체의 길이를 나타내며 최대 크기는 232－1비트이다.",
      "Time To Live는 송신 호스트가 패킷을 전송하기 전 네트워크에서 생존할 수 있는 시간을 지정한 것이다.",
      "Version Number는 IP 프로토콜의 버전번호를 나타낸다."
    ],
    "answer": "2",
    "explanation": "Total Packet Length (16 bits): IP 헤더 및 데이터를 포함한 IP 패킷 전체 길이를 바이트 단위로 길이를 표시. (최대값은 65,535 = 2^16 - 1)",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 65,
    "question": "다음 Python 프로그램의 실행 결과가 [실행결과]와 같을 때, 빈칸에 적합한 것은?",
    "options": [
      "either",
      "elif",
      "else if",
      "else"
    ],
    "answer": "2",
    "explanation": "python 조건문 if, elif, else\nelse if 는 없습니다 ..ㅠㅠ",
    "subject": "프로그래밍 언어 활용",
    "imageName": "정보처리기사_20220424_65_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 66,
    "question": "RIP 라우팅 프로토콜에 대한 설명으로 틀린 것은?",
    "options": [
      "경로 선택 메트릭은 홉 카운트(hop count)이다.",
      "라우팅 프로토콜을 IGP와 EGP로 분류했을 때 EGP에 해당한다.",
      "최단 경로 탐색에 Bellman-Ford 알고리즘을 사용한다.",
      "각 라우터는 이웃 라우터들로부터 수신한 정보를 이용하여 라우팅 표를 갱신한다."
    ],
    "answer": "2",
    "explanation": "RIP(Routing Information Protocol)\n- 최단 경로 탐색에는 Bellman-Ford 알고리즘을 사용하는 거리 벡터 라우팅 프로토콜\n- 라우팅 프로토콜을 IGP와 EGP로 분류했을 때 IGP에 해당한다.\n- 최단경로탐색에는 Bellman-Ford 알고리즘을 사용한다.\n- 최적의 경로를 산출하기 위한 정보로서 홉(거리 값)만을 고려하므로, RIP을 선택한 경로가 최적의 경로가 아닌 경우가 많이 발생할 수 있다.\n- 소규모 네트워크 환경에 적합하다.\n- 최대 홉 카운트를 15홉 이하로 한정하고 있다.",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 67,
    "question": "다음에서 설명하는 프로세스 스케줄링은?",
    "options": [
      "FIFO 스케줄링",
      "RR 스케줄링",
      "HRN 스케줄링",
      "MQ 스케줄링"
    ],
    "answer": "3",
    "explanation": "HRN 스케줄링 방식\n- 비선점 스케줄링\n     실행시간이 긴 프로세스에 불리한 SJF 을 보완하기 위해\n     대기시간 및 서비스 시간을 이용\n     긴 작업과 짧은 작업 간의 지나친 불평등을 해소할 수 있다.\n     우선순위를 계산 숫자가 높은것부터 낮은순으로 순위 부여\n     (대기시간 + 서비스시간) / 서비스시간 = 우선순위값) 값이 클수록 우선순위가 높다.",
    "subject": "프로그래밍 언어 활용",
    "imageName": "정보처리기사_20220424_67_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 68,
    "question": "UNIX 운영체제에 관한 특징으로 틀린 것은?",
    "options": [
      "하나 이상의 작업에 대하여 백그라운드에서 수행이 가능하다.",
      "Multi-User는 지원하지만 Multi-Tasking은 지원하지 않는다.",
      "트리 구조의 파일 시스템을 갖는다.",
      "이식성이 높으며 장치 간의 호환성이 높다."
    ],
    "answer": "2",
    "explanation": "UNIX 운영체제\n주로 서버용 컴퓨터에서 사용됨\ntime sharing system을 위해 설계된 대화식 운영체제\nc언어로 작성되어 이식성 높고, 장치간 호환성 높다.\nMulti user, Multi tasking 모두 지원.\n트리 구조의 파일시스템",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 69,
    "question": "UDP 프로토콜의 특징이 아닌 것은?",
    "options": [
      "비연결형 서비스를 제공한다.",
      "단순한 헤더 구조로 오버헤드가 적다.",
      "주로 주소를 지정하고, 경로를 설정하는 기능을 한다.",
      "TCP와 같이 트랜스포트 계층에 존재한다."
    ],
    "answer": "3",
    "explanation": "UDP(User Datagram Protocol)\n- 비연결형 및 비신뢰성 전송 서비스를 제공한다.\n- 흐름 제어나 순서 제어가 없어 전송 속도가 빠르다.\n- 수신된 데이터의 순서 재조정 기능을 지원하지 않는다.\n- 복구 기능을 제공하지 않는다.\n오답피하기\n- ③ 번은 IP Protocol에 관한 설명이다.",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 70,
    "question": "Python 데이터 타입 중 시퀀스(Sequence) 데이터 타입에 해당하며 다양한 데이터 타입들을 주어진 순서에 따라 저장할 수 있으나 저장된 내용을 변경할 수 없는 것은?",
    "options": [
      "복소수(complex) 타입",
      "리스트(list) 타입",
      "사전(dict) 타입",
      "튜플(tuple) 타입"
    ],
    "answer": "4",
    "explanation": "리스트 타입 : 가변형\n튜플 타입 : 불변형",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 71,
    "question": "다음 JAVA 프로그램이 실행되었을 때, 실행결과는?",
    "options": [
      "1 2 3 4",
      "0 1 2 3",
      "1 2 3",
      "0 1 2"
    ],
    "answer": "2",
    "explanation": "0부터 시작해서 4보다 작은 정수\n+는 1씩 증가",
    "subject": "프로그래밍 언어 활용",
    "imageName": "정보처리기사_20220424_71_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 72,
    "question": "다음 JAVA 프로그램이 실행되었을 때의 결과는?",
    "options": [
      "1",
      "2",
      "3",
      "4"
    ],
    "answer": "3",
    "explanation": "mx = a < b ? b : a;\na < b 조건문이 참일 경우 전자인 b, 거짓일 경우 후자인 a 가 mx의 값이 됨\n여기선 a = 1, b = 2 이기 때문에 a < b 는 참이므로 mx = b = 2\n그 다음\nif 절의 조건 mx == 1 은 mx = 2 이기 때문에 거짓, else 문으로 넘어감\nmn = b < mx ? d : c;\nb = 2, mx = 2 이기 때문에 b < mx 조건은 거짓, 그러므로 후자인 c 의 값이 mn에 대입됨\nmn = c = 3\n결과적으로, mn을 출력하게 되면 c의 값 3이 나온다",
    "subject": "프로그래밍 언어 활용",
    "imageName": "정보처리기사_20220424_72_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 73,
    "question": "다음 중 Myers가 구분한 응집도(Cohesion)의 정도에서 가장 낮은 응집도를 갖는 단계는?",
    "options": [
      "순차적 응집도(Sequential Cohesion)",
      "기능적 응집도(Functional Cohesion)",
      "시간적 응집도(Temporal Cohesion)",
      "우연적 응집도(Coincidental Cohesion)"
    ],
    "answer": "4",
    "explanation": "응집도\n-  (강함) 기능적 응집도 > 순차적 응집도 > 교환적 응집도 > 절차적 응집도 > 시간적 응집도 > 논리적 응집도 > 우연적 응집도 (약함)",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 74,
    "question": "다음 C언어 프로그램이 실행되었을 때, 실행 결과는?",
    "options": [
      "0",
      "1",
      "2",
      "3"
    ],
    "answer": "2",
    "explanation": "r1 - or 연산 한쪽만 참이여도 1 반환 n2<=2(참) -> 1\nr2 - =! 부정연산자 3 부정 0 반환 -> 0\nr3 - and 연산 둘다 참이여야 1반환 (n1>1) (거짓) -> 0\n0 - 0 + 1 = 1",
    "subject": "프로그래밍 언어 활용",
    "imageName": "정보처리기사_20220424_74_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 75,
    "question": "IP 프로토콜의 주요 특징에 해당하지 않는 것은?",
    "options": [
      "체크섬(Checksum) 기능으로 데이터 체크섬(Data Checksum)만 제공한다.",
      "패킷을 분할, 병합하는 기능을 수행하기도 한다.",
      "비연결형 서비스를 제공한다.",
      "Best Effort 원칙에 따른 전송 기능을 제공한다."
    ],
    "answer": "1",
    "explanation": "데이터 체크섬은 제공하지 않고, 헤더 체크섬만 제공한다.",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 76,
    "question": "4개의 페이지를 수용할 수 있는 주기억장치가 있으며, 초기에는 모두 비어 있다고 가정한다. 다음의 순서로 페이지 참조가 발생할 때, LRU 페이지 교체 알고리즘을 사용할 경우 몇 번의 페이지 결함이 발생하는가?",
    "options": [
      "5회",
      "6회",
      "7회",
      "8회"
    ],
    "answer": "1",
    "explanation": "1 | 1 [결함(부재)]\n2 | 1 2 [결]\n3 | 1 2 3 [결]\n1 | 1 2 3 [적재되어 있는 1 참조]\n2 | 1 2 3 [적재되어 있는 2 참조]\n4 | 1 2 3 4 [결]\n1 | 1 2 3 4 [적재되어 있는 1 참조]\n2 | 1 2 3 4 [적재되어 있는 2 참조]\n5 | 1 2 5 4 [결], [최근까지 남아있었던(LRU기법) 3을 제거, 5 적재]\n총 결함 발생 횟수는 5회입니다.",
    "subject": "프로그래밍 언어 활용",
    "imageName": "정보처리기사_20220424_76_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 77,
    "question": "사용자 수준에서 지원되는 스레드(thread)가 커널에서 지원되는 스레드에 비해 가지는 장점으로 옳은 것은?",
    "options": [
      "한 프로세스가 운영체제를 호출할 때 전체 프로세스가 대기할 필요가 없으므로 시스템 성능을 높일 수 있다.",
      "동시에 여러 스레드가 커널에 접근할 수 있으므로 여러 스레드가 시스템 호출을 동시에 사용할 수 있다.",
      "각 스레드를 개별적으로 관리할 수 있으므로 스레드의 독립적인 스케줄링이 가능하다.",
      "커널 모드로의 전환 없이 스레드 교환이 가능하므로 오버헤드가 줄어든다."
    ],
    "answer": "4",
    "explanation": "1,2,3 : 커널수준 스레드의 장점",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 78,
    "question": "한 모듈이 다른 모듈의 내부 기능 및 그 내부 자료를 참조하는 경우의 결합도는?",
    "options": [
      "내용 결합도(Content Coupling)",
      "제어 결합도(Control Coupling)",
      "공통 결합도(Common Coupling)",
      "스탬프 결합도(Stamp Coupling)"
    ],
    "answer": "1",
    "explanation": "스탬프 결합도 - 두 모듈이 매개변수로 자료를 전달할 때, 자료구조 형태로 전달되어 이용될 때 데이터가 결합되어 있다고 한다.\n내용 결합도 - 하나의 모듈이 직접적으로 다른 모듈의 내용을 참조할 때 두 모듈은 내용적으로 결합되어 있다고 한다.\n공통 결합도 -  두 모듈이 동일한 전역 데이터를 접근한다면 공통결합 되어 있다고 한다.\n결합도 -  두 모듈간의 상호작용, 또는 의존도 정도를 나타내는 것이다",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 79,
    "question": "a[0]의 주소값이 10일 경우 다음 C언어 프로그램이 실행되었을 때의 결과는? (단, int 형의 크기는 4Byte로 가정한다.)",
    "options": [
      "14, 10",
      "14, 14",
      "18, 10",
      "18, 14"
    ],
    "answer": "3",
    "explanation": "{14           ,22,          30,           38         }\n주소값 10,11,12,13 / 14,15,16,17 / 18,19,20,21 / 22,23,24,25\n자리값 a(0)           a(1)         a(2)          a(3)\n*1개의 주소값 : 1Byte\n\nprintf(\"%u, \", &a[2];      a[2]자리의 첫번째 주소값   18\nprintf(\"%u\", a);           a[0]자리의 첫번째 주소값   10",
    "subject": "프로그래밍 언어 활용",
    "imageName": "정보처리기사_20220424_79_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 80,
    "question": "모듈화(Modularity)와 관련한 설명으로 틀린 것은?",
    "options": [
      "시스템을 모듈로 분할하면 각각의 모듈을 별개로 만들고 수정할 수 있기 때문에 좋은 구조가 된다.",
      "응집도는 모듈과 모듈 사이의 상호의존 또는 연관 정도를 의미한다.",
      "모듈 간의 결합도가 약해야 독립적인 모듈이 될 수 있다.",
      "모듈 내 구성 요소들 간의 응집도가 강해야 좋은 모듈 설계이다."
    ],
    "answer": "2",
    "explanation": "응집도 : 하나의 모듈이 하나의 기능을 수행하는 요소들간의 연관성 척도, 독립적인 모듈이 되기 위해서는 응집도가 강해야 한다.(결합도는 약해야 한다.)",
    "subject": "프로그래밍 언어 활용",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 81,
    "question": "소프트웨어 개발에서 정보보안 3요소에 해당 하지 않는 설명은?",
    "options": [
      "기밀성 : 인가된 사용자에 대해서만 자원 접근이 가능하다.",
      "무결성 : 인가된 사용자에 대해서만 자원 수정이 가능하며 전송중인 정보는 수정되지 않는다.",
      "가용성 : 인가된 사용자는 가지고 있는 권한 범위 내에서 언제든 자원 접근이 가능하다.",
      "휘발성 : 인가된 사용자가 수행한 데이터는 처리 완료 즉시 폐기 되어야 한다."
    ],
    "answer": "4",
    "explanation": "정보보안 3요소 : 무결성,기밀성,가용성 (무기가)",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 82,
    "question": "어떤 외부 컴퓨터가 접속되면 접속 인가 여부를 점검해서 인가된 경우에는 접속이 허용되고, 그 반대의 경우에는 거부할 수 있는 접근제어 유틸리티는?",
    "options": [
      "tcp wrapper",
      "trace checker",
      "token finder",
      "change detector"
    ],
    "answer": "1",
    "explanation": "tcp/ip 통신에서, tcp는 3-way handshake 를 통해 통신이 원활히 이뤄질 수 있는지를 확인합니다.",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 83,
    "question": "기기를 키오스크에 갖다 대면 원하는 데이터를 바로 가져올 수 있는 기술로 10㎝ 이내 근접 거리에서 기가급 속도로 데이터 전송이 가능한 초고속 근접무선통신(NFC : Near Field Communication) 기술은?",
    "options": [
      "BcN(Broadband Convergence Network)",
      "Zing",
      "Marine Navi",
      "C-V2X(Cellular Vehicle To Everything)"
    ],
    "answer": "2",
    "explanation": "근거리로 가까이 가면 지이이이잉 하고 소리가 난다고 외우세요.",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 84,
    "question": "취약점 관리를 위한 응용 프로그램의 보안 설정과 가장 거리가 먼 것은?",
    "options": [
      "서버 관리실 출입 통제",
      "실행 프로세스 권한 설정",
      "운영체제의 접근 제한",
      "운영체제의 정보 수집 제한"
    ],
    "answer": "1",
    "explanation": "응용프로그램 취약점 관리\n- 패치 관리 : 응용프로그램에 대한 패치 또는 서비스 팩 적용\n- 응용프로그램 실행권한의 제한 필요\n- 운영체제의 접근 제한\n- 정보 수집 제한\n- 불필요한 서비스 및 악성 프로그램의 확인 및 제거\n- 시스템 무결성 검사 : 주요 파일을 검사하여 변경 내역 확인",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 85,
    "question": "소프트웨어 개발 프레임워크와 관련한 설명으로 가장 적절하지 않은 것은?",
    "options": [
      "반제품 상태의 제품을 토대로 도메인별로 필요한 서비스 컴포넌트를 사용하여 재사용성 확대와 성능을 보장 받을 수 있게 하는 개발 소프트웨어이다.",
      "라이브러리와는 달리 사용자 코드에서 프레임워크를 호출해서 사용하고, 그에 대한 제어도 사용자 코드가 가지는 방식이다.",
      "설계 관점에 개발 방식을 패턴화시키기 위한 노력의 결과물인 소프트웨어 디자인 패턴을 반제품 소프트웨어 상태로 집적화시킨 것으로 볼 수 있다.",
      "프레임워크의 동작 원리를 그 제어 흐름의 일반적인 프로그램 흐름과 반대로 동작한다고 해서 IoC(Inversion of Control)이라고 설명하기도 한다."
    ],
    "answer": "2",
    "explanation": "사용자 코드에서 호출해서 사용하고 그에 대한 제어를 할 수 있는 것은 라이브러리이다. 프레임워크는 이미 정해진 코드를 호출해 사용하고 자체적인 흐름을 가지고 있음.",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 86,
    "question": "클라우드 기반 HSM(Cloud-based Hardware Security Module)에 대한 설명으로 틀린 것은?",
    "options": [
      "클라우드(데이터센터) 기반 암호화 키 생성, 처리, 저장 등을 하는 보안 기기이다.",
      "국내에서는 공인인증제의 폐지와 전자서명법 개정을 추진하면서 클라우드 HSM 용어가 자주 등장하였다.",
      "클라우드에 인증서를 저장하므로 기존 HSM 기기나 휴대폰에 인증서를 저장해 다닐 필요가 없다.",
      "하드웨어가 아닌 소프트웨어적으로만 구현되기 때문에 소프트웨어식 암호 기술에 내재된 보안 취약점을 해결할 수 없다는 것이 주요 단점이다."
    ],
    "answer": "4",
    "explanation": "하드웨어적으로 구현되므로 소프트웨어식 암호 기술에 내재된 보안 취약점을 해결할 수 있다.",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 87,
    "question": "다음 내용이 설명하는 기술로 가장 적절한 것은?",
    "options": [
      "Virtual Local Area Network",
      "Simple Station Network",
      "Mesh Network",
      "Modem Network"
    ],
    "answer": "3",
    "explanation": "그물 = mesh",
    "subject": "정보시스템 구축관리",
    "imageName": "정보처리기사_20220424_87_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 88,
    "question": "물리적 위협으로 인한 문제에 해당하지 않는 것은?",
    "options": [
      "화재, 홍수 등 천재지변으로 인한 위협",
      "하드웨어 파손, 고장으로 인한 장애",
      "방화, 테러로 인한 하드웨어와 기록장치를 물리적으로 파괴하는 행위",
      "방화벽 설정의 잘못된 조작으로 인한 네트워크, 서버 보안 위협"
    ],
    "answer": "4",
    "explanation": "방화벽 설정의 잘못된 조작으로 인한 네트워크, 서버 보안 위협 - 기술적",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 89,
    "question": "악성코드의 유형 중 다른 컴퓨터의 취약점을 이용하여 스스로 전파하거나 메일로 전파되며 스스로를 증식하는 것은?",
    "options": [
      "Worm",
      "Rogue Ware",
      "Adware",
      "Reflection Attack"
    ],
    "answer": "1",
    "explanation": "",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 90,
    "question": "다음 설명에 해당하는 공격기법은?",
    "options": [
      "Ping of Death",
      "Session Hijacking",
      "Piggyback Attack",
      "XSS"
    ],
    "answer": "1",
    "explanation": "ICMP가 패킷을 많이 쏘니 핑 하고 죽어삣네. 핑 오브 데스",
    "subject": "정보시스템 구축관리",
    "imageName": "정보처리기사_20220424_90_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 91,
    "question": "다음 설명에 해당하는 소프트웨어는?",
    "options": [
      "전역 함수 라이브러리",
      "소프트웨어 개발 프레임워크",
      "컨테이너 아키텍처",
      "어휘 분석기"
    ],
    "answer": "2",
    "explanation": "프레임워크는 뼈대 골조를 의미하고 특정 기능을 수행하기 위한 \"클래스\"나 \"인터페이스\"를 모아둔 집합체",
    "subject": "정보시스템 구축관리",
    "imageName": "정보처리기사_20220424_91_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 92,
    "question": "소프트웨어 개발 방법론 중 애자일(Agile) 방법론의 특징과 가장 거리가 먼 것은?",
    "options": [
      "각 단계의 결과가 완전히 확인된 후 다음 단계 진행",
      "소프트웨어 개발에 참여하는 구성원들 간의 의사소통 중시",
      "환경 변화에 대한 즉시 대응",
      "프로젝트 상황에 따른 주기적 조정"
    ],
    "answer": "1",
    "explanation": "1번은 폭포수 모형의 특징",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 93,
    "question": "대칭 암호 알고리즘과 비대칭 암호 알고리즘에 대한 설명으로 틀린 것은?",
    "options": [
      "대칭 암호 알고리즘은 비교적 실행 속도가 빠르기 때문에 다양한 암호의 핵심 함수로 사용될 수 있다.",
      "대칭 암호 알고리즘은 비밀키 전달을 위한 키 교환이 필요하지 않아 암호화 및 복호화의 속도가 빠르다.",
      "비대칭 암호 알고리즘은 자신만이 보관하는 비밀키를 이용하여 인증, 전자서명 등에 적용이 가능하다.",
      "대표적인 대칭키 암호 알고리즘으로는 AES, IDEA 등이 있다."
    ],
    "answer": "2",
    "explanation": "대칭 암호화 알고리즘은 키 교환이 필요하기 때문에 키를 교환하는 중 키가 탈취될 수 있다는 문제가 있다.\n공개 암호화 방식에 비해 속도가 빠르다.",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 94,
    "question": "두 명의 개발자가 5개월에 걸쳐 10000 라인의 코드를 개발하였을 때, 월별(man-month) 생산성 측정을 위한 계산 방식으로 가장 적합한 것은?",
    "options": [
      "10000／2",
      "10000／(5×2)",
      "10000／5",
      "(2×10000)／5"
    ],
    "answer": "2",
    "explanation": "생산성 = LOC/노력(인월)\n10000/(5X2)",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 95,
    "question": "접근 통제 방법 중 조직 내에서 직무, 직책 등 개인의 역할에 따라 결정하여 부여하는 접근 정책은?",
    "options": [
      "RBAC",
      "DAC",
      "MAC",
      "QAC"
    ],
    "answer": "1",
    "explanation": "(Role Based Access Control)\n역할 기반 접근통제\n권한이 있는 사용자들만 접근할 수 있는 보안 방법",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 96,
    "question": "COCOMO(Constructive Cost Model) 모형의 특징이 아닌 것은?",
    "options": [
      "프로젝트를 완성하는데 필요한 man-month로 산정 결과를 나타낼 수 있다.",
      "보헴(Boehm)이 제안한 것으로 원시코드 라인 수에 의한 비용 산정 기법이다.",
      "비교적 작은 규모의 프로젝트 기록을 통계 분석하여 얻은 결과를 반영한 모델이며 중소 규모 소프트웨어 프로젝트 비용 추정에 적합하다.",
      "프로젝트 개발유형에 따라 object, dynamic, function의 3가지 모드로 구분한다."
    ],
    "answer": "4",
    "explanation": "개발유형에 따라 조직형(Organic), 반분리형(Semi-Detached), 내장형(Embedded)으로 구분한다.",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 97,
    "question": "각 사용자 인증의 유형에 대한 설명으로 가장 적절하지 않은 것은?",
    "options": [
      "지식 : 주체는 '그가 알고 있는 것'을 보여주며 예시로는 패스워드, PIN 등이 있다.",
      "소유 : 주체는 '그가 가지고 있는 것'을 보여주며 예시로는 토큰, 스마트카드 등이 있다.",
      "존재 : 주체는 '그를 대체하는 것'을 보여주며 예시로는 패턴, QR 등이 있다.",
      "행위 : 주체는 '그가 하는 것'을 보여주며 예시로는 서명, 움직임, 음성 등이 있다."
    ],
    "answer": "3",
    "explanation": "",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  },
  {
    "licenseName": "정보처리기사",
    "number": 98,
    "question": "시스템의 사용자가 로그인하여 명령을 내리는 과정에 대한 시스템의 동작 중 다음 설명에 해당하는 것은?",
    "options": [
      "Aging",
      "Accounting",
      "Authorization",
      "Authentication"
    ],
    "answer": "4",
    "explanation": "3번은 권한부여입니다.",
    "subject": "정보시스템 구축관리",
    "imageName": "정보처리기사_20220424_98_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 99,
    "question": "다음에서 설명하는 IT 기술은?",
    "options": [
      "SDN(Software Defined Networking)",
      "NFS(Network File System)",
      "Network Mapper",
      "AOE Network"
    ],
    "answer": "1",
    "explanation": "NFS(Network File System) : 네트워크상에서 공유되는 파일시스템. 다른 원격 호스트의 파일 시스템을 로컬 디스크에 접근하듯 간단하게 접근하여 자신의 디렉토리처럼 사용할 수 있다\n\nNetwork Mapper : 네트워크 보안을 위한 유틸리티. 네트워크의 보안을 위해 물리적 연결과 어떤 서버와 운영 체제가 작동 중인지 따위를 조사하는 응용 프로그램\n\nAOE Network(Activity On Edge Network) : 어떤 프로젝트를 마치기까지 수행되는 작업의 각 단계(상태)를 그래프의 정점(Vertex)으로 표현하고, 작업 하나가 완료되어 다음 단계로 넘어가는 시간을 그래프의 간선(Edge)으로 나타낸 방향 그래프",
    "subject": "정보시스템 구축관리",
    "imageName": "정보처리기사_20220424_99_01"
  },
  {
    "licenseName": "정보처리기사",
    "number": 100,
    "question": "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은?",
    "options": [
      "각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.",
      "시간선(Time-line) 차트라고도 한다.",
      "수평 막대의 길이는 각 작업의 기간을 나타낸다.",
      "작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."
    ],
    "answer": "4",
    "explanation": "",
    "subject": "정보시스템 구축관리",
    "imageName": ""
  }
]